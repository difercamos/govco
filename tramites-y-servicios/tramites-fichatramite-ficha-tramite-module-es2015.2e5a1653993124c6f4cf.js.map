{"version":3,"sources":["./node_modules/ng2-search-filter/ng2-search-filter.js","./node_modules/ngx-pagination/dist/ngx-pagination.js","./src/app/tramites/fichatramite/components/acciones/accion-documento/accion-documento.component.html","./src/app/tramites/fichatramite/components/acciones/accion-excepcion/accion-excepcion.component.html","./src/app/tramites/fichatramite/components/acciones/accion-formulario/accion-formulario.component.html","./src/app/tramites/fichatramite/components/acciones/accion-pago/accion-pago.component.html","./src/app/tramites/fichatramite/components/acciones/accion-solicitud/accion-solicitud.component.html","./src/app/tramites/fichatramite/components/acciones/accion-verificacion/accion-verificacion.component.html","./src/app/tramites/fichatramite/components/embebidos/embebidos.component.html","./src/app/tramites/fichatramite/components/fichaespecifica-accordion/fichaespecifica-accordion.component.html","./src/app/tramites/fichatramite/components/fichaespecifica-header/fichaespecifica-header.component.html","./src/app/tramites/fichatramite/components/fichaespecifica/fichaespecifica.component.html","./src/app/tramites/fichatramite/components/fichaestandar/fichaestandar.component.html","./src/app/tramites/fichatramite/components/fichanosuite/fichanosuite.component.html","./src/app/tramites/fichatramite/components/general/general.component.html","./src/app/tramites/fichatramite/components/puntos-atencion-modal/puntos-atencion-modal.component.html","./src/app/tramites/fichatramite/components/recursos-modal/recursos-modal.component.html","./src/app/tramites/fichatramite/components/acciones/accion-documento/accion-documento.component.scss","./src/app/tramites/fichatramite/components/acciones/accion-documento/accion-documento.component.ts","./src/app/tramites/fichatramite/components/acciones/accion-excepcion/accion-excepcion.component.scss","./src/app/tramites/fichatramite/components/acciones/accion-excepcion/accion-excepcion.component.ts","./src/app/tramites/fichatramite/components/acciones/accion-formulario/accion-formulario.component.scss","./src/app/tramites/fichatramite/components/acciones/accion-formulario/accion-formulario.component.ts","./src/app/tramites/fichatramite/components/acciones/accion-pago/accion-pago.component.scss","./src/app/tramites/fichatramite/components/acciones/accion-pago/accion-pago.component.ts","./src/app/tramites/fichatramite/components/acciones/accion-solicitud/accion-solicitud.component.scss","./src/app/tramites/fichatramite/components/acciones/accion-solicitud/accion-solicitud.component.ts","./src/app/tramites/fichatramite/components/acciones/accion-verificacion/accion-verificacion.component.scss","./src/app/tramites/fichatramite/components/acciones/accion-verificacion/accion-verificacion.component.ts","./src/app/tramites/fichatramite/components/embebidos/embebidos.component.scss","./src/app/tramites/fichatramite/components/embebidos/embebidos.component.ts","./src/app/tramites/fichatramite/components/fichaespecifica-accordion/fichaespecifica-accordion.component.scss","./src/app/tramites/fichatramite/components/fichaespecifica-accordion/fichaespecifica-accordion.component.ts","./src/app/tramites/fichatramite/components/fichaespecifica-header/fichaespecifica-header.component.scss","./src/app/tramites/fichatramite/components/fichaespecifica-header/fichaespecifica-header.component.ts","./src/app/tramites/fichatramite/components/fichaespecifica/fichaespecifica.component.scss","./src/app/tramites/fichatramite/components/fichaespecifica/fichaespecifica.component.ts","./src/app/tramites/fichatramite/components/fichaestandar/fichaestandar.component.scss","./src/app/tramites/fichatramite/components/fichaestandar/fichaestandar.component.ts","./src/app/tramites/fichatramite/components/fichanosuite/fichanosuite.component.scss","./src/app/tramites/fichatramite/components/fichanosuite/fichanosuite.component.ts","./src/app/tramites/fichatramite/components/general/general.component.scss","./src/app/tramites/fichatramite/components/general/general.component.ts","./src/app/tramites/fichatramite/components/puntos-atencion-modal/puntos-atencion-modal.component.scss","./src/app/tramites/fichatramite/components/puntos-atencion-modal/puntos-atencion-modal.component.ts","./src/app/tramites/fichatramite/components/recursos-modal/recursos-modal.component.scss","./src/app/tramites/fichatramite/components/recursos-modal/recursos-modal.component.ts","./src/app/tramites/fichatramite/ficha-tramite-routing.module.ts","./src/app/tramites/fichatramite/ficha-tramite.module.ts","./src/app/tramites/fichatramite/services/ficha-tramite.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2D;;AAE3D;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa,IAAI;AACjB,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8C;AAC9C;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiK;AAClH;;AAE/C;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8CAA8C,EAAE;AAC5G;AACA;AACA,QAAQ,0DAAI;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,yvBAAyvB,iBAAiB,+BAA+B,yBAAyB,2FAA2F,iBAAiB,+BAA+B,yBAAyB,mGAAmG,kBAAkB,KAAK,mBAAmB,6XAA6X,yBAAyB,kCAAkC,kEAAkE,6IAA6I,4BAA4B,kCAAkC,kEAAkE,wVAAwV,aAAa,+BAA+B,yBAAyB,2FAA2F,aAAa,+BAA+B,yBAAyB;AACv7E,yCAAyC,mBAAmB,wBAAwB,EAAE,qDAAqD,mBAAmB,qBAAqB,EAAE,4BAA4B,kBAAkB,EAAE,wBAAwB,6BAA6B,gCAAgC,4BAA4B,8BAA8B,uBAAuB,EAAE,wBAAwB,4BAA4B,EAAE,kDAAkD,qBAAqB,sBAAsB,kCAAkC,uBAAuB,EAAE,kEAAkE,4BAA4B,EAAE,8BAA8B,kCAAkC,0BAA0B,qBAAqB,sBAAsB,EAAE,+BAA+B,kCAAkC,qBAAqB,sBAAsB,EAAE,wCAAwC,gCAAgC,EAAE,+CAA+C,sBAAsB,EAAE,4GAA4G,uBAAuB,0BAA0B,yBAAyB,EAAE,kGAAkG,sBAAsB,0BAA0B,wBAAwB,EAAE,kCAAkC,kCAAkC,eAAe,gBAAgB,qBAAqB,2BAA2B,EAAE,iCAAiC,kBAAkB,EAAE,wCAAwC,8CAA8C,4BAA4B,EAAE,uGAAuG,oBAAoB,EAAE,GAAG;;AAEn2D;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAM;AACd,oCAAoC,0DAAY;AAChD;AACA;AACA,QAAQ,+DAAS;AACjB;AACA;AACA;AACA,6BAA6B,qEAAuB;AACpD,2BAA2B,+DAAiB;AAC5C,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,2DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAM;AACd,oCAAoC,0DAAY;AAChD;AACA;AACA,QAAQ,+DAAS;AACjB;AACA;AACA,SAAS;AACT;AACA,YAAY,+DAAiB;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAQ;AAChB,sBAAsB,4DAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA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","file":"tramites-fichatramite-ficha-tramite-module-es2015.2e5a1653993124c6f4cf.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\n\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.js.map\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar PaginationService = /** @class */ (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = /** @class */ (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe = __decorate$1([\r\n        Pipe({\r\n            name: 'paginate',\r\n            pure: false\r\n        }),\r\n        __metadata(\"design:paramtypes\", [PaginationService])\r\n    ], PaginatePipe);\r\n    return PaginatePipe;\r\n}());\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        role=\\\"navigation\\\" \\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\\n.ngx-pagination .small-screen {\\n  display: none; }\\n@media screen and (max-width: 601px) {\\n  .ngx-pagination.responsive .small-screen {\\n    display: inline-block; } \\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\\n    display: none; }\\n}\\n  \";\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = /** @class */ (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"responsive\", {\r\n        get: function () {\r\n            return this._responsive;\r\n        },\r\n        set: function (value) {\r\n            this._responsive = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"id\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Number)\r\n    ], PaginationControlsComponent.prototype, \"maxSize\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"directionLinks\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"autoHide\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"responsive\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"previousLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"nextLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPaginationLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPageLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderCurrentLabel\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageChange\", void 0);\r\n    PaginationControlsComponent = __decorate$2([\r\n        Component({\r\n            selector: 'pagination-controls',\r\n            template: DEFAULT_TEMPLATE,\r\n            styles: [DEFAULT_STYLES],\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            encapsulation: ViewEncapsulation.None\r\n        })\r\n    ], PaginationControlsComponent);\r\n    return PaginationControlsComponent;\r\n}());\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = /** @class */ (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.getTotalItems = function () {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.setCurrent(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", String)\r\n    ], PaginationControlsDirective.prototype, \"id\", void 0);\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", Number)\r\n    ], PaginationControlsDirective.prototype, \"maxSize\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageChange\", void 0);\r\n    PaginationControlsDirective = __decorate$3([\r\n        Directive({\r\n            selector: 'pagination-template,[pagination-template]',\r\n            exportAs: 'paginationApi'\r\n        }),\r\n        __metadata$2(\"design:paramtypes\", [PaginationService,\r\n            ChangeDetectorRef])\r\n    ], PaginationControlsDirective);\r\n    return PaginationControlsDirective;\r\n}());\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar NgxPaginationModule = /** @class */ (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    NgxPaginationModule = __decorate([\r\n        NgModule({\r\n            imports: [CommonModule],\r\n            declarations: [\r\n                PaginatePipe,\r\n                PaginationControlsComponent,\r\n                PaginationControlsDirective\r\n            ],\r\n            providers: [PaginationService],\r\n            exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n        })\r\n    ], NgxPaginationModule);\r\n    return NgxPaginationModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n","module.exports = \"<p>accion-documento works!</p>\\r\\n\"","module.exports = \"<p>accion-excepcion works!</p>\\r\\n\"","module.exports = \"<p>accion-formulario works!</p>\\r\\n\"","module.exports = \"<p>accion-pago works!</p>\\r\\n\"","module.exports = \"<h4 class=\\\"titulocondicion\\\">Canal de atención</h4>\\r\\n<!-- <p class=\\\"leyendadocumento\\\">{{data.VerificacionInstDescripcion}}</p> -->\\r\\n<div *ngFor=\\\"let canales of data\\\">\\r\\n    <p>{{canales.Excepcion}}</p>\\r\\n    <!-- <div *ngFor=\\\"let canal of canales; let i = index\\\">\\r\\n        <p *ngIf=\\\"i == 0\\\" class=\\\"leyendadocumento\\\">{{canal.descripcion}} </p>\\r\\n    </div>\\r\\n    <div class=\\\"govco-table govco-table-basic\\\">\\r\\n        <table class=\\\"table table-striped\\\">\\r\\n            <ng-container  *ngFor=\\\"let canalTipo of canales; let i = index\\\">\\r\\n                <thead *ngIf=\\\"i == 0\\\" >\\r\\n                    <th scope=\\\"col\\\">Medio</th>\\r\\n                    <th scope=\\\"col\\\">Detalle</th>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'PRESENCIAL'\\\">\\r\\n                        <td>Presencial</td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"showModal({tipo: 'puntos', data: canalTipo.canal.puntosAtencion})\\\">\\r\\n                                Ver puntos de atención\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'WEB'\\\">\\r\\n                        <td>Web</td>\\r\\n                        <td>\\r\\n                            <a href=\\\"{{ canalTipo.canal.canal.UrlCanalWeb }}\\\">\\r\\n                                {{canalTipo.canal.canal.NombreCanalWeb}}\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </ng-container>\\r\\n        </table>\\r\\n    </div> -->\\r\\n</div>\\r\\n\"","module.exports = \"<h4 class=\\\"titulocondicion\\\">Condiciones</h4>\\r\\n<p class=\\\"leyendadocumento\\\">{{data.VerificacionInstDescripcion}}</p>\\r\\n\"","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n    <iframe [src]='sanitizer.bypassSecurityTrustResourceUrl(data.URL_TRAMITE)' height=\\\"600px\\\" width=\\\"100%\\\" title=\\\"Tramite\\\"></iframe>\\r\\n    <div class=\\\"tramiteCard\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8 p-2 center\\\">\\r\\n                <govco-area-servicios module=\\\"TramitesEmbebidos\\\" itemid=\\\"numero\\\" ></govco-area-servicios>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 p-2 center\\\">\\r\\n                    <a href=\\\"/ficha-tramite/T{{data.NUMERO}}\\\" class=\\\"btn btn-round btn-high \\\">Volver a información general</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\" >\\r\\n    <div class=\\\"col-12\\\">\\r\\n\\r\\n        <ngb-tabset >\\r\\n            <ngb-tab *ngFor=\\\"let itemAudiencia of data\\\">\\r\\n                <ng-template ngbTabTitle ><strong (click)=\\\"eventoTabAudiencia(itemAudiencia)\\\" >{{itemAudiencia.detalle}}</strong></ng-template>\\r\\n                <ng-template ngbTabContent>\\r\\n                    <div class=\\\"text-intro\\\">\\r\\n                        <h3>Información General del Trámite</h3>\\r\\n                        <p>Para realizar el trámite debes seguir <strong>los siguientes pasos:</strong></p>\\r\\n                    </div>\\r\\n\\r\\n                    <ngb-accordion #acc=\\\"ngbAccordion\\\" activeIds=\\\"ngb-panel-0\\\">\\r\\n                        <ngb-panel *ngFor=\\\"let momento of itemAudiencia.momentos; let i = index\\\">\\r\\n                            <ng-template ngbPanelTitle >\\r\\n                                <h3 (click)=\\\"dataDetalleMomentoAudiencia(itemAudiencia.detalle, momento.Orden)\\\">{{i+1}}. {{ momento.Descripcion }}</h3>\\r\\n                                <div class=\\\"icon\\\"></div>\\r\\n                            </ng-template>\\r\\n                            <ng-template ngbPanelContent>\\r\\n\\r\\n                                <div *ngFor=\\\"let accion of momento.acciones | keyvalue\\\">\\r\\n                                    <div *ngIf=\\\"accion.key === 'VERIFICACION_INST'\\\">\\r\\n                                        <app-accion-verificacion [data]=\\\"accion.value\\\"></app-accion-verificacion>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div *ngIf=\\\"accion.key === 'PAGO'\\\">\\r\\n                                       <app-accion-pago [data]=\\\"accion.value\\\"></app-accion-pago>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div *ngIf=\\\"accion.key === 'SOLICITUD'\\\">\\r\\n                                        <app-accion-solicitud [data]=\\\"accion.value\\\"></app-accion-solicitud>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div *ngIf=\\\"accion.key === 'DOCUMENTO'\\\">\\r\\n                                        <app-accion-documento [data]=\\\"accion.value\\\"></app-accion-documento>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div *ngIf=\\\"accion.key === 'FORMULARIO'\\\">\\r\\n                                        <app-accion-fomulario [data]=\\\"accion.value\\\"></app-accion-fomulario>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div *ngIf=\\\"accion.key === 'EXCEPCION'\\\">\\r\\n                                        <app-accion-excepcion [data]=\\\"accion.value\\\"></app-accion-excepcion>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                            </ng-template>\\r\\n                        </ngb-panel>\\r\\n                      </ngb-accordion>\\r\\n\\r\\n                </ng-template>\\r\\n            </ngb-tab>\\r\\n\\r\\n\\r\\n          </ngb-tabset>\\r\\n        <!-- <ngb-tabset *ngIf=\\\"audiencias\\\">\\r\\n            <ngb-tab *ngFor=\\\"let audiencia of audiencias\\\">\\r\\n                <ng-template ngbTabTitle ><strong (click)=\\\"tipoAudienciafuncion(audiencia.tipoaudiencia)\\\">{{audiencia.tipoaudiencia}}</strong></ng-template>\\r\\n                <ng-template ngbTabContent >\\r\\n                    <div class=\\\"text-intro\\\">\\r\\n                        <h3>Información General del Trámite</h3>\\r\\n                        <p>Para realizar el trámite debes seguir <strong>los siguientes pasos:</strong></p>\\r\\n                    </div>\\r\\n                        <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n                        <ngb-panel *ngFor=\\\"let ordenAudiencia of ordenAudiencias; let i= index\\\" >\\r\\n                            <ng-template ngbPanelTitle >\\r\\n                            <h3 (click)=\\\"dataMomentoAudiencia(audiencia.tipoaudiencia, ordenAudiencia.Orden, i)\\\">{{i+1}}. {{ ordenAudiencia.Descripcion }}</h3>\\r\\n                            <div class=\\\"icon\\\"></div>\\r\\n                            </ng-template>\\r\\n                            <ng-template ngbPanelContent >\\r\\n                                <ng-container *ngIf=\\\"extractFromJson(ordenAudiencia.Informacion); let data\\\">\\r\\n                                    <div *ngFor=\\\"let items of data\\\">\\r\\n                                        <div *ngIf=\\\"items.subtitulo == 'Condiciones'\\\" class=\\\"condicion-panel\\\">\\r\\n                                            <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                            <div *ngFor=\\\"let condicion of items.descripcion\\\">\\r\\n                                                <p class=\\\"leyendadocumento\\\">{{condicion}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"items.subtitulo == 'Formulario'\\\" class=\\\"documento-panel\\\">\\r\\n                                            <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                            <div *ngFor=\\\"let formulario of items.descripcion\\\">\\r\\n                                                <p class=\\\"nombredocumento\\\">{{formulario.nombre}}\\r\\n                                                    <a *ngIf=\\\"formulario.descarga == null\\\" href=\\\"{{formulario.url}}\\\">\\r\\n                                                        <img class=\\\"iconodisponible\\\" src=\\\"assets/icon-fichatramite/transaccional.svg\\\" alt=\\\"transaccional\\\">\\r\\n                                                    </a>\\r\\n                                                    <a *ngIf=\\\"formulario.descarga != null\\\" href=\\\"{{formulario.descarga}}\\\">\\r\\n                                                        <img class=\\\"iconodisponible\\\" src=\\\"assets/icon-fichatramite/descarga.svg\\\" alt=\\\"descarga\\\">\\r\\n                                                    </a>\\r\\n                                                </p>\\r\\n                                                <p *ngIf=\\\"formulario.descripcion != null\\\" class=\\\"leyendadocumento\\\">\\r\\n                                                    Anotación adicional: {{formulario.descripcion}}\\r\\n                                                </p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"items.subtitulo == 'Documento'\\\" class=\\\"documento-panel\\\">\\r\\n                                            <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                            <div *ngFor=\\\"let documento of items.descripcion\\\" class=\\\"documento-descripcion\\\">\\r\\n                                                <p class=\\\"nombredocumento\\\">{{documento.nombre}}</p>\\r\\n                                                <p class=\\\"infoadicional\\\">\\r\\n                                                    Cantidad: {{documento.cantidadDoc}}\\r\\n                                                    {{documento.unidadCantidad}}\\r\\n                                                    {{documento.observacionCantidad}}\\r\\n                                                </p>\\r\\n                                                <p *ngIf=\\\"documento.descripcion != null\\\" class=\\\"leyendadocumento\\\">\\r\\n                                                    Anotaciones adicionales: {{documento.descripcion}}\\r\\n                                                </p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"items.subtitulo == 'Canal de atención'\\\" class=\\\"canal-panel\\\">\\r\\n                                            <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                            <div *ngFor=\\\"let canales of items.descripcion\\\">\\r\\n                                                <div *ngFor=\\\"let canal of canales; let i = index\\\">\\r\\n                                                    <p *ngIf=\\\"i == 0\\\" class=\\\"leyendadocumento\\\">{{canal.descripcion}} </p>\\r\\n                                                    </div>\\r\\n                                                <div class=\\\"govco-table govco-table-basic\\\">\\r\\n                                                    <table class=\\\"table table-striped\\\">\\r\\n                                                        <ng-container  *ngFor=\\\"let canalTipo of canales; let i = index\\\">\\r\\n                                                            <thead *ngIf=\\\"i == 0\\\" >\\r\\n                                                                <th scope=\\\"col\\\">Medio</th>\\r\\n                                                                <th scope=\\\"col\\\">Detalle</th>\\r\\n                                                            </thead>\\r\\n                                                            <tbody>\\r\\n                                                                <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'PRESENCIAL'\\\">\\r\\n                                                                    <td>Presencial</td>\\r\\n                                                                    <td>\\r\\n                                                                        <a (click)=\\\"showModal({tipo: 'puntos', data: canalTipo.canal.puntosAtencion})\\\">\\r\\n                                                                            Ver puntos de atención\\r\\n                                                                        </a>\\r\\n                                                                    </td>\\r\\n                                                                </tr>\\r\\n                                                                <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'WEB'\\\">\\r\\n                                                                    <td>Web</td>\\r\\n                                                                    <td>\\r\\n                                                                        <a href=\\\"{{ canalTipo.canal.canal.UrlCanalWeb }}\\\">\\r\\n                                                                            {{canalTipo.canal.canal.NombreCanalWeb}}\\r\\n                                                                        </a>\\r\\n                                                                    </td>\\r\\n                                                                </tr>\\r\\n                                                            </tbody>\\r\\n                                                        </ng-container>\\r\\n                                                    </table>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"items.subtitulo == 'Pago'\\\">\\r\\n                                            <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                            <div *ngFor=\\\"let pagos of items.descripcion\\\">\\r\\n                                                <p class=\\\"leyendadocumento\\\">{{pagos.DescripcionMomento}}</p>\\r\\n                                                <p class=\\\"leyendadocumento font-weight-bold\\\">Descripción del pago</p>\\r\\n                                                <div class=\\\"govco-table govco-table-basic\\\">\\r\\n                                                    <table class=\\\"table table-striped\\\">\\r\\n                                                        <ng-container  *ngFor=\\\"let descripcion of pagos.DescripcionPago; let i = index\\\">\\r\\n                                                            <thead *ngIf=\\\"i == 0\\\" >\\r\\n                                                                <th><strong>Descripción</strong></th>\\r\\n                                                                <th><strong>Tipo Moneda</strong></th>\\r\\n                                                                <th><strong>Tipo Valor</strong></th>\\r\\n                                                                <th><strong>Cantidad</strong></th>\\r\\n                                                                <th><strong>Valor</strong></th>\\r\\n                                                            </thead>\\r\\n                                                            <tbody>\\r\\n                                                                <tr>\\r\\n                                                                    <td>{{ descripcion.nombreDescripcion }}</td>\\r\\n                                                                    <td>{{ descripcion.moneda }}</td>\\r\\n                                                                    <td>{{ descripcion.tipoValor }}</td>\\r\\n                                                                    <td>{{ descripcion.cantidadSmlv }}</td>\\r\\n                                                                    <td>{{ descripcion.valor }}</td>\\r\\n                                                                </tr>\\r\\n                                                            </tbody>\\r\\n                                                        </ng-container>\\r\\n                                                    </table>\\r\\n                                                </div>\\r\\n                                                <ng-container *ngIf=\\\"pagos.EntidadRecaudadora.length > 0\\\">\\r\\n                                                    <p class=\\\"leyendadocumento font-weight-bold\\\">Información medios de pago</p>\\r\\n                                                    <div class=\\\"govco-table govco-table-basic\\\">\\r\\n                                                        <table class=\\\"table table-striped\\\">\\r\\n                                                            <ng-container  *ngFor=\\\"let entidad of pagos.EntidadRecaudadora; let i = index\\\">\\r\\n                                                                <thead *ngIf=\\\"i == 0\\\" >\\r\\n                                                                    <th><strong>Entidad recaudadora</strong></th>\\r\\n                                                                    <th><strong>Tipo cuenta</strong></th>\\r\\n                                                                    <th><strong>Numero de Cuenta</strong></th>\\r\\n                                                                    <th><strong>Nombre de Cuenta</strong></th>\\r\\n                                                                    <th><strong>Codigo de Recaudo</strong></th>\\r\\n                                                                </thead>\\r\\n                                                                <tbody>\\r\\n                                                                    <tr>\\r\\n                                                                        <td class=\\\"textofilas\\\" >{{ entidad.nombreEntidad }}</td>\\r\\n                                                                        <td class=\\\"textofilas\\\" >{{ entidad.tipoCuenta }}</td>\\r\\n                                                                        <td class=\\\"textofilas\\\" >{{ entidad.numeroCuenta }}</td>\\r\\n                                                                        <td class=\\\"textofilas\\\" >{{ entidad.nombreCuenta }}</td>\\r\\n                                                                        <td class=\\\"textofilas\\\" >{{ entidad.codigoRecaudo }}</td>\\r\\n                                                                    </tr>\\r\\n                                                                </tbody>\\r\\n                                                            </ng-container>\\r\\n                                                        </table>\\r\\n                                                    </div>\\r\\n                                                </ng-container>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <ng-container *ngIf=\\\"extractFromJson(ordenAudiencia.Excepcion); let dataExcepciones\\\">\\r\\n                                        <div *ngIf=\\\"dataExcepciones.length > 0\\\">\\r\\n                                            <p class=\\\"font-weight-bold\\\"><em class=\\\"material-icons\\\">stars</em>Se identifica con alguno de estos casos, adicionalmente debe:</p>\\r\\n                                            <div class=\\\"excepciones\\\">\\r\\n                                                <ngb-accordion #acc=\\\"ngbAccordion\\\" [closeOthers]=\\\"true\\\">\\r\\n                                                        <ngb-panel *ngFor=\\\"let excepciones of dataExcepciones; let i= index\\\" id=\\\"{{i}}\\\">\\r\\n                                                                <ng-template ngbPanelTitle >\\r\\n                                                                    <p>{{i+1}}. {{ excepciones.TituloAcordeon }}</p>\\r\\n                                                                    <div class=\\\"icon\\\"></div>\\r\\n                                                                </ng-template>\\r\\n                                                                    <ng-template ngbPanelContent>\\r\\n                                                                        <ng-container *ngFor=\\\"let contenido of excepciones.Contenido\\\">\\r\\n                                                                            <div *ngIf=\\\"contenido.subtitulo == 'Condiciones'\\\">\\r\\n                                                                                <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n                                                                                <p class=\\\"leyendadocumento\\\">{{contenido.descripcion}}</p>\\r\\n                                                                            </div>\\r\\n                                                                            <div *ngIf=\\\"contenido.subtitulo == 'Documento'\\\">\\r\\n                                                                                <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n                                                                                <p class=\\\"nombredocumento\\\">{{contenido.descripcion.nombre}}</p>\\r\\n                                                                                <p>\\r\\n                                                                                    Cantidad: {{contenido.descripcion.cantidadDoc}}\\r\\n                                                                                    {{contenido.descripcion.unidadCantidad}}\\r\\n                                                                                    {{contenido.descripcion.observacionCantidad}}\\r\\n                                                                                </p>\\r\\n                                                                                <p *ngIf=\\\"contenido.descripcion.descripcion != null\\\" class=\\\"leyendadocumento\\\">\\r\\n                                                                                    Anotaciones adicionales: {{contenido.descripcion.descripcion}}\\r\\n                                                                                </p>\\r\\n                                                                            </div>\\r\\n                                                                            <div *ngIf=\\\"contenido.subtitulo == 'Formulario'\\\">\\r\\n                                                                                <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n                                                                                <p class=\\\"nombredocumento\\\">{{contenido.descripcion.nombre}}\\r\\n                                                                                    <a *ngIf=\\\"contenido.descripcion.descarga == null\\\" href=\\\"{{contenido.descripcion.url}}\\\">\\r\\n                                                                                        <img class=\\\"iconodisponible\\\" src=\\\"assets/icon-fichatramite/transaccional.svg\\\" alt=\\\"transaccional\\\">\\r\\n                                                                                    </a>\\r\\n                                                                                    <a *ngIf=\\\"contenido.descripcion.descarga != null\\\" href=\\\"{{contenido.descripcion.descarga}}\\\">\\r\\n                                                                                        <img class=\\\"iconodisponible\\\" src=\\\"assets/icon-fichatramite/descarga.svg\\\" alt=\\\"descarga\\\">\\r\\n                                                                                    </a>\\r\\n                                                                                </p>\\r\\n                                                                                <p *ngIf=\\\"contenido.descripcion.descripcion != null\\\" class=\\\"leyendadocumento\\\">\\r\\n                                                                                    Anotación adicional: {{contenido.descripcion.descripcion}}\\r\\n                                                                                </p>\\r\\n                                                                            </div>\\r\\n                                                                            <div *ngIf=\\\"contenido.subtitulo == 'Canal de atención'\\\" class=\\\"canal-panel\\\">\\r\\n                                                                                <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n                                                                                <ng-container *ngFor=\\\"let canal of contenido.descripcion; let i = index\\\">\\r\\n                                                                                    <p *ngIf=\\\"i == 0\\\" class=\\\"leyendadocumento\\\">{{canal.descripcion}} </p>\\r\\n                                                                                </ng-container>\\r\\n                                                                                <table class=\\\"tablainterna\\\">\\r\\n                                                                                    <tbody>\\r\\n                                                                                        <ng-container  *ngFor=\\\"let canalTipo of contenido.descripcion; let i = index\\\">\\r\\n                                                                                            <tr *ngIf=\\\"i == 0\\\" >\\r\\n                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Medio</strong></td>\\r\\n                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Detalle</strong></td>\\r\\n                                                                                            </tr>\\r\\n                                                                                            <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'PRESENCIAL'\\\">\\r\\n                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Presencial</strong></td>\\r\\n                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\">\\r\\n                                                                                                    <a (click)=\\\"showModal({tipo: 'puntos', data:  canalTipo.canal.puntosAtencion})\\\">\\r\\n                                                                                                        <strong>Ver puntos de atención</strong>\\r\\n                                                                                                    </a>\\r\\n                                                                                                </td>\\r\\n                                                                                            </tr>\\r\\n                                                                                            <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'WEB'\\\">\\r\\n                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Web</strong></td>\\r\\n                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\">\\r\\n                                                                                                    <a href=\\\"{{ canalTipo.canal.canal.UrlCanalWeb }}\\\">\\r\\n                                                                                                        <strong>{{canalTipo.canal.canal.NombreCanalWeb}}</strong>\\r\\n                                                                                                    </a>\\r\\n                                                                                                </td>\\r\\n                                                                                            </tr>\\r\\n                                                                                        </ng-container>\\r\\n                                                                                    </tbody>\\r\\n                                                                                </table>\\r\\n                                                                            </div>\\r\\n                                                                            <div *ngIf=\\\"contenido.subtitulo == 'Pago'\\\">\\r\\n                                                                                <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n\\r\\n                                                                                    {{ pagos | json}}\\r\\n                                                                                    <p class=\\\"leyendadocumento\\\">{{contenido.descripcion.DescripcionMomento}}</p>\\r\\n                                                                                    <p class=\\\"leyendadocumento\\\">Descripción del pago</p>\\r\\n\\r\\n                                                                                    <table class=\\\"tablainterna\\\">\\r\\n                                                                                        <tbody>\\r\\n                                                                                            <ng-container  *ngFor=\\\"let descripcion of contenido.descripcion.DescripcionPago; let i = index\\\">\\r\\n                                                                                                <tr *ngIf=\\\"i == 0\\\" >\\r\\n                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Descripción</strong></td>\\r\\n                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Tipo Moneda</strong></td>\\r\\n                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Tipo Valor</strong></td>\\r\\n                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Cantidad</strong></td>\\r\\n                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Valor</strong></td>\\r\\n                                                                                                </tr>\\r\\n                                                                                                    <tr>\\r\\n                                                                                                    <td class=\\\"textofilas\\\" >{{ descripcion.nombreDescripcion }}</td>\\r\\n                                                                                                    <td class=\\\"textofilas\\\" >{{ descripcion.moneda }}</td>\\r\\n                                                                                                    <td class=\\\"textofilas\\\" >{{ descripcion.tipoValor }}</td>\\r\\n                                                                                                    <td class=\\\"textofilas\\\" >{{ descripcion.cantidadSmlv }}</td>\\r\\n                                                                                                    <td class=\\\"textofilas\\\" >{{ descripcion.valor }}</td>\\r\\n                                                                                                </tr>\\r\\n                                                                                            </ng-container>\\r\\n                                                                                        </tbody>\\r\\n                                                                                    </table>\\r\\n                                                                                    <ng-container *ngIf=\\\"contenido.descripcion.EntidadRecaudadora.length > 0\\\">\\r\\n                                                                                        <p class=\\\"leyendadocumento\\\">Información medios de pago</p>\\r\\n                                                                                        <table class=\\\"tablainterna\\\">\\r\\n                                                                                            <tbody>\\r\\n                                                                                                <ng-container  *ngFor=\\\"let entidad of contenido.descripcion.EntidadRecaudadora; let i = index\\\">\\r\\n                                                                                                    <tr *ngIf=\\\"i == 0\\\" >\\r\\n                                                                                                        <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Entidad recaudadora</strong></td>\\r\\n                                                                                                        <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Tipo cuenta</strong></td>\\r\\n                                                                                                        <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Numero de Cuenta</strong></td>\\r\\n                                                                                                        <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Nombre de Cuenta</strong></td>\\r\\n                                                                                                        <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Codigo de Recaudo</strong></td>\\r\\n                                                                                                    </tr>\\r\\n                                                                                                        <tr>\\r\\n                                                                                                        <td class=\\\"textofilas\\\">{{ entidad.nombreEntidad }}</td>\\r\\n                                                                                                        <td class=\\\"textofilas\\\">{{ entidad.tipoCuenta }}</td>\\r\\n                                                                                                        <td class=\\\"textofilas\\\">{{ entidad.numeroCuenta }}</td>\\r\\n                                                                                                        <td class=\\\"textofilas\\\">{{ entidad.nombreCuenta }}</td>\\r\\n                                                                                                        <td class=\\\"textofilas\\\">{{ entidad.codigoRecaudo }}</td>\\r\\n                                                                                                    </tr>\\r\\n                                                                                                </ng-container>\\r\\n                                                                                            </tbody>\\r\\n                                                                                        </table>\\r\\n                                                                                    </ng-container>\\r\\n\\r\\n                                                                            </div>\\r\\n                                                                        </ng-container>\\r\\n                                                                    </ng-template>\\r\\n                                                            </ngb-panel>\\r\\n                                                </ngb-accordion>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </ng-container>\\r\\n                                </ng-container>\\r\\n                            </ng-template>\\r\\n                        </ngb-panel>\\r\\n                    </ngb-accordion>\\r\\n                </ng-template>\\r\\n            </ngb-tab>\\r\\n        </ngb-tabset> -->\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"data\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <h3>{{data.NombreEstandarizado}}</h3>\\r\\n        <p>{{ data.Proposito }}</p>\\r\\n\\r\\n        <ng-container *ngIf=\\\"data.PaginaWeb\\\" >\\r\\n            <h3 class=\\\"nombreinstitucion\\\"><a href=\\\"{{data.PaginaWeb}}\\\" target=\\\"_blank\\\">{{ data.Entidad }}</a></h3>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<app-fichaespecifica-header\\r\\n    *ngIf=\\\"infoBasicaTramite\\\"\\r\\n    [data]=\\\"infoBasicaTramite\\\"></app-fichaespecifica-header>\\r\\n\\r\\n<app-fichaespecifica-accordion\\r\\n    *ngIf=\\\"audiencias\\\"\\r\\n    [data]=\\\"audiencias\\\"\\r\\n    (cargarMomentosAudiencia)=\\\"cargarMomentosAudiencia($event)\\\"\\r\\n    (cargarDetalleMomento)=\\\"cargarDetalleMomento($event)\\\"></app-fichaespecifica-accordion>\\r\\n\\r\\n\\r\\n\\r\\n<!--\\r\\n\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <div *ngIf=\\\"infoBasicaTramite\\\">\\r\\n        <div class=\\\"ficha_detalles\\\">\\r\\n\\r\\n            <div class=\\\"row\\\" >\\r\\n                <div class=\\\"col-md-8 col-12\\\">\\r\\n\\r\\n                    <ngb-tabset *ngIf=\\\"audiencias\\\">\\r\\n                        <ngb-tab *ngFor=\\\"let audiencia of audiencias\\\">\\r\\n                            <ng-template ngbTabTitle ><strong (click)=\\\"tipoAudienciafuncion(audiencia.tipoaudiencia)\\\">{{audiencia.tipoaudiencia}}</strong></ng-template>\\r\\n                            <ng-template ngbTabContent >\\r\\n                                <div class=\\\"text-intro\\\">\\r\\n                                    <h3>Información General del Trámite</h3>\\r\\n                                    <p>Para realizar el trámite debes seguir <strong>los siguientes pasos:</strong></p>\\r\\n                                </div>\\r\\n                                    <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n                                    <ngb-panel *ngFor=\\\"let ordenAudiencia of ordenAudiencias; let i= index\\\" >\\r\\n                                        <ng-template ngbPanelTitle >\\r\\n                                        <h3 (click)=\\\"dataMomentoAudiencia(audiencia.tipoaudiencia, ordenAudiencia.Orden, i)\\\">{{i+1}}. {{ ordenAudiencia.Descripcion }}</h3>\\r\\n                                        <div class=\\\"icon\\\"></div>\\r\\n                                        </ng-template>\\r\\n                                        <ng-template ngbPanelContent >\\r\\n                                            <ng-container *ngIf=\\\"extractFromJson(ordenAudiencia.Informacion); let data\\\">\\r\\n                                                <div *ngFor=\\\"let items of data\\\">\\r\\n                                                    <div *ngIf=\\\"items.subtitulo == 'Condiciones'\\\" class=\\\"condicion-panel\\\">\\r\\n                                                        <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                                        <div *ngFor=\\\"let condicion of items.descripcion\\\">\\r\\n                                                            <p class=\\\"leyendadocumento\\\">{{condicion}}</p>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div *ngIf=\\\"items.subtitulo == 'Formulario'\\\" class=\\\"documento-panel\\\">\\r\\n                                                        <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                                        <div *ngFor=\\\"let formulario of items.descripcion\\\">\\r\\n                                                            <p class=\\\"nombredocumento\\\">{{formulario.nombre}}\\r\\n                                                                <a *ngIf=\\\"formulario.descarga == null\\\" href=\\\"{{formulario.url}}\\\">\\r\\n                                                                    <img class=\\\"iconodisponible\\\" src=\\\"assets/icon-fichatramite/transaccional.svg\\\" alt=\\\"transaccional\\\">\\r\\n                                                                </a>\\r\\n                                                                <a *ngIf=\\\"formulario.descarga != null\\\" href=\\\"{{formulario.descarga}}\\\">\\r\\n                                                                    <img class=\\\"iconodisponible\\\" src=\\\"assets/icon-fichatramite/descarga.svg\\\" alt=\\\"descarga\\\">\\r\\n                                                                </a>\\r\\n                                                            </p>\\r\\n                                                            <p *ngIf=\\\"formulario.descripcion != null\\\" class=\\\"leyendadocumento\\\">\\r\\n                                                                Anotación adicional: {{formulario.descripcion}}\\r\\n                                                            </p>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div *ngIf=\\\"items.subtitulo == 'Documento'\\\" class=\\\"documento-panel\\\">\\r\\n                                                        <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                                        <div *ngFor=\\\"let documento of items.descripcion\\\" class=\\\"documento-descripcion\\\">\\r\\n                                                            <p class=\\\"nombredocumento\\\">{{documento.nombre}}</p>\\r\\n                                                            <p class=\\\"infoadicional\\\">\\r\\n                                                                Cantidad: {{documento.cantidadDoc}}\\r\\n                                                                {{documento.unidadCantidad}}\\r\\n                                                                {{documento.observacionCantidad}}\\r\\n                                                            </p>\\r\\n                                                            <p *ngIf=\\\"documento.descripcion != null\\\" class=\\\"leyendadocumento\\\">\\r\\n                                                                Anotaciones adicionales: {{documento.descripcion}}\\r\\n                                                            </p>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div *ngIf=\\\"items.subtitulo == 'Canal de atención'\\\" class=\\\"canal-panel\\\">\\r\\n                                                        <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                                        <div *ngFor=\\\"let canales of items.descripcion\\\">\\r\\n                                                            <div *ngFor=\\\"let canal of canales; let i = index\\\">\\r\\n                                                                <p *ngIf=\\\"i == 0\\\" class=\\\"leyendadocumento\\\">{{canal.descripcion}} </p>\\r\\n                                                                </div>\\r\\n                                                            <div class=\\\"govco-table govco-table-basic\\\">\\r\\n                                                                <table class=\\\"table table-striped\\\">\\r\\n                                                                    <ng-container  *ngFor=\\\"let canalTipo of canales; let i = index\\\">\\r\\n                                                                        <thead *ngIf=\\\"i == 0\\\" >\\r\\n                                                                            <th scope=\\\"col\\\">Medio</th>\\r\\n                                                                            <th scope=\\\"col\\\">Detalle</th>\\r\\n                                                                        </thead>\\r\\n                                                                        <tbody>\\r\\n                                                                            <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'PRESENCIAL'\\\">\\r\\n                                                                                <td>Presencial</td>\\r\\n                                                                                <td>\\r\\n                                                                                    <a (click)=\\\"showModal({tipo: 'puntos', data: canalTipo.canal.puntosAtencion})\\\">\\r\\n                                                                                        Ver puntos de atención\\r\\n                                                                                    </a>\\r\\n                                                                                </td>\\r\\n                                                                            </tr>\\r\\n                                                                            <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'WEB'\\\">\\r\\n                                                                                <td>Web</td>\\r\\n                                                                                <td>\\r\\n                                                                                    <a href=\\\"{{ canalTipo.canal.canal.UrlCanalWeb }}\\\">\\r\\n                                                                                        {{canalTipo.canal.canal.NombreCanalWeb}}\\r\\n                                                                                    </a>\\r\\n                                                                                </td>\\r\\n                                                                            </tr>\\r\\n                                                                        </tbody>\\r\\n                                                                    </ng-container>\\r\\n                                                                </table>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div *ngIf=\\\"items.subtitulo == 'Pago'\\\">\\r\\n                                                        <h4 class=\\\"titulocondicion\\\">{{items.subtitulo}}</h4>\\r\\n                                                        <div *ngFor=\\\"let pagos of items.descripcion\\\">\\r\\n                                                            <p class=\\\"leyendadocumento\\\">{{pagos.DescripcionMomento}}</p>\\r\\n                                                            <p class=\\\"leyendadocumento font-weight-bold\\\">Descripción del pago</p>\\r\\n                                                            <div class=\\\"govco-table govco-table-basic\\\">\\r\\n                                                                <table class=\\\"table table-striped\\\">\\r\\n                                                                    <ng-container  *ngFor=\\\"let descripcion of pagos.DescripcionPago; let i = index\\\">\\r\\n                                                                        <thead *ngIf=\\\"i == 0\\\" >\\r\\n                                                                            <th><strong>Descripción</strong></th>\\r\\n                                                                            <th><strong>Tipo Moneda</strong></th>\\r\\n                                                                            <th><strong>Tipo Valor</strong></th>\\r\\n                                                                            <th><strong>Cantidad</strong></th>\\r\\n                                                                            <th><strong>Valor</strong></th>\\r\\n                                                                        </thead>\\r\\n                                                                        <tbody>\\r\\n                                                                            <tr>\\r\\n                                                                                <td>{{ descripcion.nombreDescripcion }}</td>\\r\\n                                                                                <td>{{ descripcion.moneda }}</td>\\r\\n                                                                                <td>{{ descripcion.tipoValor }}</td>\\r\\n                                                                                <td>{{ descripcion.cantidadSmlv }}</td>\\r\\n                                                                                <td>{{ descripcion.valor }}</td>\\r\\n                                                                            </tr>\\r\\n                                                                        </tbody>\\r\\n                                                                    </ng-container>\\r\\n                                                                </table>\\r\\n                                                            </div>\\r\\n                                                            <ng-container *ngIf=\\\"pagos.EntidadRecaudadora.length > 0\\\">\\r\\n                                                                <p class=\\\"leyendadocumento font-weight-bold\\\">Información medios de pago</p>\\r\\n                                                                <div class=\\\"govco-table govco-table-basic\\\">\\r\\n                                                                    <table class=\\\"table table-striped\\\">\\r\\n                                                                        <ng-container  *ngFor=\\\"let entidad of pagos.EntidadRecaudadora; let i = index\\\">\\r\\n                                                                            <thead *ngIf=\\\"i == 0\\\" >\\r\\n                                                                                <th><strong>Entidad recaudadora</strong></th>\\r\\n                                                                                <th><strong>Tipo cuenta</strong></th>\\r\\n                                                                                <th><strong>Numero de Cuenta</strong></th>\\r\\n                                                                                <th><strong>Nombre de Cuenta</strong></th>\\r\\n                                                                                <th><strong>Codigo de Recaudo</strong></th>\\r\\n                                                                            </thead>\\r\\n                                                                            <tbody>\\r\\n                                                                                <tr>\\r\\n                                                                                    <td class=\\\"textofilas\\\" >{{ entidad.nombreEntidad }}</td>\\r\\n                                                                                    <td class=\\\"textofilas\\\" >{{ entidad.tipoCuenta }}</td>\\r\\n                                                                                    <td class=\\\"textofilas\\\" >{{ entidad.numeroCuenta }}</td>\\r\\n                                                                                    <td class=\\\"textofilas\\\" >{{ entidad.nombreCuenta }}</td>\\r\\n                                                                                    <td class=\\\"textofilas\\\" >{{ entidad.codigoRecaudo }}</td>\\r\\n                                                                                </tr>\\r\\n                                                                            </tbody>\\r\\n                                                                        </ng-container>\\r\\n                                                                    </table>\\r\\n                                                                </div>\\r\\n                                                            </ng-container>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <ng-container *ngIf=\\\"extractFromJson(ordenAudiencia.Excepcion); let dataExcepciones\\\">\\r\\n                                                    <div *ngIf=\\\"dataExcepciones.length > 0\\\">\\r\\n                                                        <p class=\\\"font-weight-bold\\\"><em class=\\\"material-icons\\\">stars</em>Se identifica con alguno de estos casos, adicionalmente debe:</p>\\r\\n                                                        <div class=\\\"excepciones\\\">\\r\\n                                                            <ngb-accordion #acc=\\\"ngbAccordion\\\" [closeOthers]=\\\"true\\\">\\r\\n                                                                    <ngb-panel *ngFor=\\\"let excepciones of dataExcepciones; let i= index\\\" id=\\\"{{i}}\\\">\\r\\n                                                                            <ng-template ngbPanelTitle >\\r\\n                                                                                <p>{{i+1}}. {{ excepciones.TituloAcordeon }}</p>\\r\\n                                                                                <div class=\\\"icon\\\"></div>\\r\\n                                                                            </ng-template>\\r\\n                                                                                <ng-template ngbPanelContent>\\r\\n                                                                                    <ng-container *ngFor=\\\"let contenido of excepciones.Contenido\\\">\\r\\n                                                                                        <div *ngIf=\\\"contenido.subtitulo == 'Condiciones'\\\">\\r\\n                                                                                            <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n                                                                                            <p class=\\\"leyendadocumento\\\">{{contenido.descripcion}}</p>\\r\\n                                                                                        </div>\\r\\n                                                                                        <div *ngIf=\\\"contenido.subtitulo == 'Documento'\\\">\\r\\n                                                                                            <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n                                                                                            <p class=\\\"nombredocumento\\\">{{contenido.descripcion.nombre}}</p>\\r\\n                                                                                            <p>\\r\\n                                                                                                Cantidad: {{contenido.descripcion.cantidadDoc}}\\r\\n                                                                                                {{contenido.descripcion.unidadCantidad}}\\r\\n                                                                                                {{contenido.descripcion.observacionCantidad}}\\r\\n                                                                                            </p>\\r\\n                                                                                            <p *ngIf=\\\"contenido.descripcion.descripcion != null\\\" class=\\\"leyendadocumento\\\">\\r\\n                                                                                                Anotaciones adicionales: {{contenido.descripcion.descripcion}}\\r\\n                                                                                            </p>\\r\\n                                                                                        </div>\\r\\n                                                                                        <div *ngIf=\\\"contenido.subtitulo == 'Formulario'\\\">\\r\\n                                                                                            <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n                                                                                            <p class=\\\"nombredocumento\\\">{{contenido.descripcion.nombre}}\\r\\n                                                                                                <a *ngIf=\\\"contenido.descripcion.descarga == null\\\" href=\\\"{{contenido.descripcion.url}}\\\">\\r\\n                                                                                                    <img class=\\\"iconodisponible\\\" src=\\\"assets/icon-fichatramite/transaccional.svg\\\" alt=\\\"transaccional\\\">\\r\\n                                                                                                </a>\\r\\n                                                                                                <a *ngIf=\\\"contenido.descripcion.descarga != null\\\" href=\\\"{{contenido.descripcion.descarga}}\\\">\\r\\n                                                                                                    <img class=\\\"iconodisponible\\\" src=\\\"assets/icon-fichatramite/descarga.svg\\\" alt=\\\"descarga\\\">\\r\\n                                                                                                </a>\\r\\n                                                                                            </p>\\r\\n                                                                                            <p *ngIf=\\\"contenido.descripcion.descripcion != null\\\" class=\\\"leyendadocumento\\\">\\r\\n                                                                                                Anotación adicional: {{contenido.descripcion.descripcion}}\\r\\n                                                                                            </p>\\r\\n                                                                                        </div>\\r\\n                                                                                        <div *ngIf=\\\"contenido.subtitulo == 'Canal de atención'\\\" class=\\\"canal-panel\\\">\\r\\n                                                                                            <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n                                                                                            <ng-container *ngFor=\\\"let canal of contenido.descripcion; let i = index\\\">\\r\\n                                                                                                <p *ngIf=\\\"i == 0\\\" class=\\\"leyendadocumento\\\">{{canal.descripcion}} </p>\\r\\n                                                                                            </ng-container>\\r\\n                                                                                            <table class=\\\"tablainterna\\\">\\r\\n                                                                                                <tbody>\\r\\n                                                                                                    <ng-container  *ngFor=\\\"let canalTipo of contenido.descripcion; let i = index\\\">\\r\\n                                                                                                        <tr *ngIf=\\\"i == 0\\\" >\\r\\n                                                                                                            <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Medio</strong></td>\\r\\n                                                                                                            <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Detalle</strong></td>\\r\\n                                                                                                        </tr>\\r\\n                                                                                                        <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'PRESENCIAL'\\\">\\r\\n                                                                                                            <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Presencial</strong></td>\\r\\n                                                                                                            <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\">\\r\\n                                                                                                                <a (click)=\\\"showModal({tipo: 'puntos', data:  canalTipo.canal.puntosAtencion})\\\">\\r\\n                                                                                                                    <strong>Ver puntos de atención</strong>\\r\\n                                                                                                                </a>\\r\\n                                                                                                            </td>\\r\\n                                                                                                        </tr>\\r\\n                                                                                                        <tr *ngIf=\\\"canalTipo.canal.canal.TipoCanal == 'WEB'\\\">\\r\\n                                                                                                            <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Web</strong></td>\\r\\n                                                                                                            <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\">\\r\\n                                                                                                                <a href=\\\"{{ canalTipo.canal.canal.UrlCanalWeb }}\\\">\\r\\n                                                                                                                    <strong>{{canalTipo.canal.canal.NombreCanalWeb}}</strong>\\r\\n                                                                                                                </a>\\r\\n                                                                                                            </td>\\r\\n                                                                                                        </tr>\\r\\n                                                                                                    </ng-container>\\r\\n                                                                                                </tbody>\\r\\n                                                                                            </table>\\r\\n                                                                                        </div>\\r\\n                                                                                        <div *ngIf=\\\"contenido.subtitulo == 'Pago'\\\">\\r\\n                                                                                            <h4 class=\\\"titulocondicion\\\">{{contenido.subtitulo}}</h4>\\r\\n\\r\\n                                                                                                {{ pagos | json}}\\r\\n                                                                                                <p class=\\\"leyendadocumento\\\">{{contenido.descripcion.DescripcionMomento}}</p>\\r\\n                                                                                                <p class=\\\"leyendadocumento\\\">Descripción del pago</p>\\r\\n\\r\\n                                                                                                <table class=\\\"tablainterna\\\">\\r\\n                                                                                                    <tbody>\\r\\n                                                                                                        <ng-container  *ngFor=\\\"let descripcion of contenido.descripcion.DescripcionPago; let i = index\\\">\\r\\n                                                                                                            <tr *ngIf=\\\"i == 0\\\" >\\r\\n                                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Descripción</strong></td>\\r\\n                                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Tipo Moneda</strong></td>\\r\\n                                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Tipo Valor</strong></td>\\r\\n                                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Cantidad</strong></td>\\r\\n                                                                                                                <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Valor</strong></td>\\r\\n                                                                                                            </tr>\\r\\n                                                                                                                <tr>\\r\\n                                                                                                                <td class=\\\"textofilas\\\" >{{ descripcion.nombreDescripcion }}</td>\\r\\n                                                                                                                <td class=\\\"textofilas\\\" >{{ descripcion.moneda }}</td>\\r\\n                                                                                                                <td class=\\\"textofilas\\\" >{{ descripcion.tipoValor }}</td>\\r\\n                                                                                                                <td class=\\\"textofilas\\\" >{{ descripcion.cantidadSmlv }}</td>\\r\\n                                                                                                                <td class=\\\"textofilas\\\" >{{ descripcion.valor }}</td>\\r\\n                                                                                                            </tr>\\r\\n                                                                                                        </ng-container>\\r\\n                                                                                                    </tbody>\\r\\n                                                                                                </table>\\r\\n                                                                                                <ng-container *ngIf=\\\"contenido.descripcion.EntidadRecaudadora.length > 0\\\">\\r\\n                                                                                                    <p class=\\\"leyendadocumento\\\">Información medios de pago</p>\\r\\n                                                                                                    <table class=\\\"tablainterna\\\">\\r\\n                                                                                                        <tbody>\\r\\n                                                                                                            <ng-container  *ngFor=\\\"let entidad of contenido.descripcion.EntidadRecaudadora; let i = index\\\">\\r\\n                                                                                                                <tr *ngIf=\\\"i == 0\\\" >\\r\\n                                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 83px;\\\"><strong>Entidad recaudadora</strong></td>\\r\\n                                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Tipo cuenta</strong></td>\\r\\n                                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Numero de Cuenta</strong></td>\\r\\n                                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Nombre de Cuenta</strong></td>\\r\\n                                                                                                                    <td class=\\\"textofilas\\\" style=\\\"width: 450px;\\\"><strong>Codigo de Recaudo</strong></td>\\r\\n                                                                                                                </tr>\\r\\n                                                                                                                    <tr>\\r\\n                                                                                                                    <td class=\\\"textofilas\\\">{{ entidad.nombreEntidad }}</td>\\r\\n                                                                                                                    <td class=\\\"textofilas\\\">{{ entidad.tipoCuenta }}</td>\\r\\n                                                                                                                    <td class=\\\"textofilas\\\">{{ entidad.numeroCuenta }}</td>\\r\\n                                                                                                                    <td class=\\\"textofilas\\\">{{ entidad.nombreCuenta }}</td>\\r\\n                                                                                                                    <td class=\\\"textofilas\\\">{{ entidad.codigoRecaudo }}</td>\\r\\n                                                                                                                </tr>\\r\\n                                                                                                            </ng-container>\\r\\n                                                                                                        </tbody>\\r\\n                                                                                                    </table>\\r\\n                                                                                                </ng-container>\\r\\n\\r\\n                                                                                        </div>\\r\\n                                                                                    </ng-container>\\r\\n                                                                                </ng-template>\\r\\n                                                                        </ngb-panel>\\r\\n                                                            </ngb-accordion>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </ng-container>\\r\\n                                            </ng-container>\\r\\n                                        </ng-template>\\r\\n                                    </ngb-panel>\\r\\n                                </ngb-accordion>\\r\\n                            </ng-template>\\r\\n                        </ngb-tab>\\r\\n                    </ngb-tabset>\\r\\n                    <div class=\\\"tramiteCard\\\">\\r\\n                        <h3>Ten en cuenta sobre este trámite</h3>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"p-2\\\" *ngIf=\\\"puntosAtencion.length > 0\\\">\\r\\n                                    <a (click)=\\\"showModal({tipo: 'puntos', data:  puntosAtencion})\\\" class=\\\"btn btn-round btn-middle\\\">Puntos de atención</a>\\r\\n                            </div>\\r\\n                            <div class=\\\"p-2\\\" *ngIf=\\\"dataNormatividad.length > 0\\\">\\r\\n                                    <a (click)=\\\"showModal({tipo: 'normatividad', data: dataNormatividad})\\\" class=\\\"btn btn-round btn-middle\\\">Legislación Asociada</a>\\r\\n                            </div>\\r\\n                            <ng-container *ngIf=\\\"dataUrl && embebidos\\\">\\r\\n\\r\\n                                <div *ngIf=\\\"dataUrl.Tipotramite == 'Realizar trámite en línea' || dataUrl.Tipotramite == 'SemiPresencial'\\\">\\r\\n                                    <a *ngIf=\\\"embebidos.EMBEBIDO == 'Si' && embebidos.ESTADO_ID == 1\\\" (click)=\\\"redireccionar()\\\">\\r\\n                                        <img  src=\\\"assets/icon-fichatramite/tramitelinea.png\\\" alt=\\\"Tramite en Linea\\\">\\r\\n                                    </a>\\r\\n\\r\\n                                    <a *ngIf=\\\"(embebidos.EMBEBIDO == 'No' || embebidos == 'Enlinea')\\r\\n                                                && dataUrl.UrlTramiteEnLinea != null \\\"\\r\\n                                                href=\\\"{{ dataUrl.UrlTramiteEnLinea }}\\\">\\r\\n                                                <img  src=\\\"assets/icon-fichatramite/tramitelinea.png\\\" alt=\\\"Tramite en Linea\\\">\\r\\n                                    </a>\\r\\n\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 col-12\\\" *ngIf=\\\"dataUrl && embebidos\\\">\\r\\n                    <div *ngIf=\\\"dataUrl.Tipotramite == 'Realizar trámite en línea' || dataUrl.Tipotramite == 'SemiPresencial'\\\">\\r\\n                        <a *ngIf=\\\"embebidos.EMBEBIDO == 'Si' && embebidos.ESTADO_ID == 1\\\" (click)=\\\"redireccionar()\\\">\\r\\n                            <img  src=\\\"assets/icon-fichatramite/tramitelinea.png\\\" alt=\\\"Tramite en Linea\\\">\\r\\n                        </a>\\r\\n                        <a *ngIf=\\\"(embebidos.EMBEBIDO == 'No' || embebidos == 'Enlinea')\\r\\n                                  && dataUrl.UrlTramiteEnLinea != null\\\"   href=\\\"{{ dataUrl.UrlTramiteEnLinea }}\\\">\\r\\n                            <img  src=\\\"assets/icon-fichatramite/tramitelinea.png\\\" alt=\\\"Tramite en Linea\\\">\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <div class=\\\"p-2\\\" *ngIf=\\\"dataUrl.Tipotramite == 'SemiPresencial' || dataUrl.Tipotramite == 'Presencial'\\\">\\r\\n                        <a (click)=\\\"showModal({tipo: 'puntos', data:  puntosAtencion})\\\" class=\\\"btn btn-round btn-middle puntos-btn\\\">Puntos de atención</a>\\r\\n                    </div>\\r\\n                        <govco-area-servicios module=\\\"Tramites\\\" itemid=\\\"numero\\\"></govco-area-servicios>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div> -->\\r\\n\\r\\n\"","module.exports = \"<div *ngIf=\\\"dataBase\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h2>{{ dataBase.NombreEstandarizado }}</h2>\\r\\n        <p>{{ dataBase.Proposito }}</p>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"form-group select-govco\\\">\\r\\n            <label for=\\\"lugar\\\"><strong>¿Donde quieres realizar el trámite?</strong></label>           \\r\\n            <select  (change)=\\\"idMunicipio($event.target.value)\\\" class=\\\"form-control\\\" id=\\\"lugar\\\" name=\\\"lugar\\\" required>\\r\\n                <option value=\\\"\\\" selected disabled>Seleccione un Municipio - Departamento</option>\\r\\n                <ng-container *ngFor=\\\"let puntos of dataBase.Puntos\\\">\\r\\n                    <option value=\\\"{{ puntos.IdTramiteMunicipio }}\\\">{{ puntos.MunicipioNombre }} - {{ puntos.DepartamentoNombre }}</option>\\r\\n                </ng-container>\\r\\n            </select>\\r\\n        </div>     \\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \"<ng-container *ngIf=\\\"dataBase\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h4  class=\\\"titulotramite\\\">{{dataBase.Nombre}}</h4>\\r\\n        <p>{{dataBase.Descripcion}}</p>\\r\\n        <p class=\\\"urlEntidadNoSuit\\\"><b>{{dataBase.NombreEntidad}}</b></p>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <div class=\\\"tramiteCard\\\">\\r\\n                <h3>Objetivo del trámite</h3>\\r\\n                <p>{{dataBase.Proposito}}</p>\\r\\n                <h3>Resultado</h3>\\r\\n                <p>{{dataBase.ResultadoOtroServicio}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"tramiteCard\\\" *ngIf=\\\"consideraciones.length > 0\\\">\\r\\n                <h3>Recuerde</h3>\\r\\n                <ng-container *ngFor=\\\"let consideracion of consideraciones\\\">\\r\\n                    <p>{{ consideracion.CondicionesAdicionales }}</p>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <div class=\\\"tramiteCard\\\" *ngIf=\\\"puntosAtencion.length > 0\\\">\\r\\n                <p class=\\\"labeltramiteabout\\\">Ten en cuenta sobre este trámite</p>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"p-2\\\">\\r\\n                            <a (click)=\\\"showModal(puntosAtencion)\\\" class=\\\"btn btn-round btn-high\\\">Ver puntos de atención</a>\\r\\n                    </div>\\r\\n                    <div class=\\\"p-2\\\">\\r\\n                            <a href=\\\"{{dataBase.UrlServicioEnLinea}}\\\" class=\\\"btn btn-round btn-high\\\">Realizar trámite en línea</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\" *ngIf=\\\"dataBase\\\">\\r\\n            <!-- <a href=\\\"{{dataBase.UrlServicioEnLinea}}\\\">\\r\\n                <img  src=\\\"assets/icon-fichatramite/tramitelinea.png\\\">\\r\\n            </a> -->\\r\\n            <govco-area-servicios module=\\\"TramitesNoSuit\\\" itemid=\\\"numero\\\"></govco-area-servicios>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-container>\"","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n\\r\\n    <embebidos *ngIf=\\\"embebido == true\\\" [data]=\\\"dataEmbebidos\\\"></embebidos>\\r\\n\\r\\n    <div *ngIf=\\\"tramite.tipo == '601'\\\">\\r\\n        <app-ficha-especifica *ngIf=\\\"tramite.tipo\\\" [informacionFicha]=\\\"tramite\\\" (propagar)=\\\"redireccionador($event)\\\">\\r\\n        </app-ficha-especifica>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"tramite.tipo == '602'\\\">\\r\\n        <ficha-estandar [tipoFicha]=\\\"tramite.tipo\\\"  (propagar)=\\\"redireccionador($event)\\\">\\r\\n        </ficha-estandar>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"tramite.tipo == '603'\\\">\\r\\n        <ficha-no-suite  [tipoFicha]=\\\"tramite.tipo\\\"></ficha-no-suite>\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \"<div class=\\\"puntos-atencion-tramite\\\">\\r\\n<div class=\\\"modal-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-7 col-12\\\">\\r\\n                <ng-container *ngIf=\\\"puntosAtencion\\\">\\r\\n                <h2>Puntos de Atención</h2>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"normatividad\\\">\\r\\n                <h2 class=\\\"titulo_popuptramite\\\">Legislación Asociada</h2>\\r\\n            </ng-container>\\r\\n            </div>            \\r\\n        \\r\\n        <div class=\\\"col-md-5 col-12\\\">\\r\\n            <div class=\\\"buscador\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" aria-label=\\\"Buscar\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"serchText\\\">\\r\\n                <span class=\\\"govco-icon govco-icon-search-cn\\\"></span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\"><em class=\\\"material-icons\\\">clear</em></button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">    \\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"table table-responsive\\\" *ngIf=\\\"puntosAtencion\\\">\\r\\n                        \\r\\n                            <ng-container  *ngFor=\\\"let punto of puntosAtencion |filter:serchText | paginate: { itemsPerPage: 5, currentPage: p}; let i = index\\\">\\r\\n                                <thead *ngIf=\\\"i == 0\\\" >\\r\\n                                    <th class=\\\"textofilas\\\" ><strong>Punto</strong></th>\\r\\n                                    <th class=\\\"textofilas\\\" ><strong>Departamento / Municipio</strong></th>\\r\\n                                    <th class=\\\"textofilas\\\" ><strong>Dirección</strong></th>\\r\\n                                    <th class=\\\"textofilas\\\" ><strong>Horario</strong></th>\\r\\n                                    <th class=\\\"textofilas\\\" ><strong>Teléfono</strong></th>\\r\\n                                    <th class=\\\"textofilas\\\" ><strong>Ver Mapa</strong></th>\\r\\n                                </thead>\\r\\n                            </ng-container>\\r\\n                            <tbody>\\r\\n                            <ng-container  *ngFor=\\\"let punto of puntosAtencion |filter:serchText | paginate: { itemsPerPage: 5, currentPage: p}; let i = index\\\">\\r\\n                                 <tr>\\r\\n                                    <td>{{ punto.PuntoAtencionNombre }}</td>\\r\\n                                    <td>{{ punto.Departamento }} / {{ punto.Municipio }}</td>\\r\\n                                    <td>{{ punto.PuntoAtencionDireccion }}</td>\\r\\n                                    <td>{{ punto.HorarioAtencion }}</td>\\r\\n                                    <td>{{ punto.PuntoAtencionTelefono }}</td>\\r\\n                                    <td>\\r\\n                                        <a target=\\\"_blank\\\" href=\\\"http://maps.google.com/maps?ll={{ punto.Latitud.replace(',','.') }},{{ punto.Longitud.replace(',','.') }} \\\">\\r\\n                                            <span class=\\\"govco-icon govco-icon-pin\\\"></span>\\r\\n                                        </a></td>\\r\\n                                </tr>\\r\\n                            </ng-container>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n\\r\\n                    <table class=\\\"table\\\"  *ngIf=\\\"normatividad\\\">\\r\\n                            <tbody>\\r\\n                                <ng-container  *ngFor=\\\"let normas of normatividad |filter:serchText | paginate: { itemsPerPage: 6, currentPage: p}; let i = index\\\">\\r\\n                                    <ng-container *ngIf=\\\"i%2==0\\\">\\r\\n                                     <tr >\\r\\n                                    </ng-container>\\r\\n                                        <td style=\\\"width: 50%;\\\" class=\\\"textofilas\\\">{{ normas.TipoNorma }} {{ normas.NumeroNorma }} de {{ normas.AnoNorma }} ({{ normas.Articulos }})\\r\\n                                        <img src=\\\"assets/icon-fichatramite/save.svg\\\" class=\\\"iconodisponible\\\" style=\\\"float:right;\\\" alt=\\\"Save\\\" >\\r\\n                                        </td>\\r\\n                                </ng-container>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>                    \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h3>Recursos</h3>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\"><em class=\\\"material-icons\\\">clear</em></button>\\r\\n</div>\\r\\n<div class=\\\"hr-popuptramites\\\">\\r\\n    <hr>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <govco-area-servicios module=\\\"Tramites\\\" module-id=\\\"numero\\\"></govco-area-servicios>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2FjY2lvbmVzL2FjY2lvbi1kb2N1bWVudG8vYWNjaW9uLWRvY3VtZW50by5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-accion-documento',\r\n  templateUrl: './accion-documento.component.html',\r\n  styleUrls: ['./accion-documento.component.scss']\r\n})\r\nexport class AccionDocumentoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2FjY2lvbmVzL2FjY2lvbi1leGNlcGNpb24vYWNjaW9uLWV4Y2VwY2lvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-accion-excepcion',\r\n  templateUrl: './accion-excepcion.component.html',\r\n  styleUrls: ['./accion-excepcion.component.scss']\r\n})\r\nexport class AccionExcepcionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2FjY2lvbmVzL2FjY2lvbi1mb3JtdWxhcmlvL2FjY2lvbi1mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-accion-formulario',\r\n  templateUrl: './accion-formulario.component.html',\r\n  styleUrls: ['./accion-formulario.component.scss']\r\n})\r\nexport class AccionFormularioComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2FjY2lvbmVzL2FjY2lvbi1wYWdvL2FjY2lvbi1wYWdvLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-accion-pago',\r\n  templateUrl: './accion-pago.component.html',\r\n  styleUrls: ['./accion-pago.component.scss']\r\n})\r\nexport class AccionPagoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2FjY2lvbmVzL2FjY2lvbi1zb2xpY2l0dWQvYWNjaW9uLXNvbGljaXR1ZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-accion-solicitud',\r\n  templateUrl: './accion-solicitud.component.html',\r\n  styleUrls: ['./accion-solicitud.component.scss']\r\n})\r\nexport class AccionSolicitudComponent implements OnInit {\r\n\r\n  @Input() data: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.data);\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2FjY2lvbmVzL2FjY2lvbi12ZXJpZmljYWNpb24vYWNjaW9uLXZlcmlmaWNhY2lvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-accion-verificacion',\r\n  templateUrl: './accion-verificacion.component.html',\r\n  styleUrls: ['./accion-verificacion.component.scss']\r\n})\r\nexport class AccionVerificacionComponent implements OnInit {\r\n\r\n  @Input() data: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.data);\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".tramiteCard {\\n  border-radius: 0.5rem;\\n  padding-bottom: 20px;\\n  padding-left: 20px;\\n  margin: 20px 0px 0px 0px !important;\\n  background: #fff;\\n  width: 100%;\\n  border: 1px;\\n  border-color: #E5EEFB;\\n  border-style: solid;\\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  clear: both;\\n  overflow: hidden;\\n}\\n\\n.center {\\n  margin: 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvZW1iZWJpZG9zL0M6XFxDb250cmF0by00NDgtMjAyMFxcUHJvZHVjY2lvblxcdHJhbWl0ZXMtc2VydmljaW9zLXNwYS1zY2RcXHNyYy9zcmNcXGFwcFxcdHJhbWl0ZXNcXGZpY2hhdHJhbWl0ZVxcY29tcG9uZW50c1xcZW1iZWJpZG9zXFxlbWJlYmlkb3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2VtYmViaWRvcy9lbWJlYmlkb3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxxQkFBQTtFQUNBLG9CQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQ0FBQTtFQUNBLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EsK0dBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7QUNDSjs7QURDRTtFQUNJLGNBQUE7QUNFTiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2VtYmViaWRvcy9lbWJlYmlkb3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudHJhbWl0ZUNhcmR7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjVyZW07XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgIG1hcmdpbjogMjBweCAwcHggMHB4IDBweCAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyOiAxcHg7XHJcbiAgICBib3JkZXItY29sb3I6ICNFNUVFRkI7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDFweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICAuY2VudGVye1xyXG4gICAgICBtYXJnaW46IDAgYXV0bztcclxuICB9IiwiLnRyYW1pdGVDYXJkIHtcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBtYXJnaW46IDIwcHggMHB4IDBweCAwcHggIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMXB4O1xuICBib3JkZXItY29sb3I6ICNFNUVFRkI7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKTtcbiAgY2xlYXI6IGJvdGg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5jZW50ZXIge1xuICBtYXJnaW46IDAgYXV0bztcbn0iXX0= */\"","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FichaTramiteService } from '../../services/ficha-tramite.service'\r\nimport { GeneralComponent } from '../general/general.component'\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport {RecursosModalComponent} from '../recursos-modal/recursos-modal.component'\r\n\r\n\r\n@Component({\r\n  selector: 'embebidos',\r\n  templateUrl: './embebidos.component.html',\r\n  styleUrls: ['./embebidos.component.scss']\r\n})\r\nexport class EmbebidosComponent implements AfterViewInit {\r\n  @Input('data') data: number;\r\n  constructor(public sanitizer: DomSanitizer, private modalService: NgbModal) {  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n  showModal(id) {\r\n   const modal = this.modalService.open(RecursosModalComponent, { size: 'lg',\r\n      backdrop: \"static\",\r\n      keyboard: false\r\n    });\r\n    modal.componentInstance.idTramite = id;\r\n  }\r\n\r\n  ngAfterViewChecked(){\r\n    this.setNumeroTramite(this.data[\"NUMERO\"]);\r\n  }\r\n  setNumeroTramite(numero: string) {\r\n    const s = document.getElementsByTagName('govco-area-servicios');\r\n    if(s.length > 0){\r\n      s[0].setAttribute('itemid', \"T\"+numero);\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2ZpY2hhZXNwZWNpZmljYS1hY2NvcmRpb24vZmljaGFlc3BlY2lmaWNhLWFjY29yZGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fichaespecifica-accordion',\r\n  templateUrl: './fichaespecifica-accordion.component.html',\r\n  styleUrls: ['./fichaespecifica-accordion.component.scss']\r\n})\r\nexport class FichaespecificaAccordionComponent implements OnInit {\r\n\r\n  @Input() data: any[];\r\n  @Output() cargarDetalleMomento =  new EventEmitter<any>();\r\n  @Output() cargarMomentosAudiencia =  new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  eventoTabAudiencia(data) {\r\n    this.cargarMomentosAudiencia.emit(data);\r\n  }\r\n\r\n  dataDetalleMomentoAudiencia(audiencia: string , momento: number) {\r\n\r\n    const data = {\r\n      audiencia,\r\n      momento\r\n    };\r\n\r\n    this.cargarDetalleMomento.emit(data);\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2ZpY2hhZXNwZWNpZmljYS1oZWFkZXIvZmljaGFlc3BlY2lmaWNhLWhlYWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fichaespecifica-header',\r\n  templateUrl: './fichaespecifica-header.component.html',\r\n  styleUrls: ['./fichaespecifica-header.component.scss']\r\n})\r\nexport class FichaespecificaHeaderComponent implements OnInit {\r\n\r\n  @Input() data: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.data);\r\n  }\r\n\r\n}\r\n","module.exports = \".titulocondicion {\\n  display: block;\\n  font-size: 14px;\\n  color: #004884;\\n  text-align: left;\\n  margin-bottom: 10px;\\n  font-weight: bold;\\n}\\n\\n.leyendadocumento {\\n  text-align: left;\\n  font-weight: 400;\\n  line-height: 21px;\\n  margin: 0 0 10px;\\n}\\n\\n.nombredocumento {\\n  color: #0B457F;\\n  text-align: left;\\n  font-weight: bold;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  padding-top: 1rem;\\n}\\n\\n.infoadicional {\\n  font-size: 12px;\\n  display: inline;\\n  color: rgba(0, 0, 0, 0.87);\\n}\\n\\n.iconodisponible {\\n  max-width: 25px;\\n}\\n\\n.title-subacordeon {\\n  color: #0B457F;\\n  font-weight: 600;\\n}\\n\\n.labeltramiteabout {\\n  display: block;\\n  font-size: 20px;\\n  color: #3772FF !important;\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvZmljaGFlc3BlY2lmaWNhL0M6XFxDb250cmF0by00NDgtMjAyMFxcUHJvZHVjY2lvblxcdHJhbWl0ZXMtc2VydmljaW9zLXNwYS1zY2RcXHNyYy9zcmNcXGFwcFxcdHJhbWl0ZXNcXGZpY2hhdHJhbWl0ZVxcY29tcG9uZW50c1xcZmljaGFlc3BlY2lmaWNhXFxmaWNoYWVzcGVjaWZpY2EuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2ZpY2hhZXNwZWNpZmljYS9maWNoYWVzcGVjaWZpY2EuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURDQTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FDRUo7O0FEQUE7RUFDSSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0FDR0o7O0FEREE7RUFDSSxlQUFBO0VBQ0EsZUFBQTtFQUNBLDBCQUFBO0FDSUo7O0FERkE7RUFDSSxlQUFBO0FDS0o7O0FESEU7RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7QUNNSjs7QURKRTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxnQkFBQTtBQ09KIiwiZmlsZSI6InNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvZmljaGFlc3BlY2lmaWNhL2ZpY2hhZXNwZWNpZmljYS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXR1bG9jb25kaWNpb257XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGNvbG9yOiAjMDA0ODg0O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4ubGV5ZW5kYWRvY3VtZW50b3tcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIxcHg7XHJcbiAgICBtYXJnaW46IDAgMCAxMHB4O1xyXG59XHJcbi5ub21icmVkb2N1bWVudG97XHJcbiAgICBjb2xvcjogIzBCNDU3RjtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIHBhZGRpbmctdG9wOiAxcmVtO1xyXG59XHJcbi5pbmZvYWRpY2lvbmFse1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZGlzcGxheTogaW5saW5lO1xyXG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XHJcbn1cclxuLmljb25vZGlzcG9uaWJsZXtcclxuICAgIG1heC13aWR0aDogMjVweDtcclxufVxyXG4gIC50aXRsZS1zdWJhY29yZGVvbntcclxuICAgIGNvbG9yOiAjMEI0NTdGO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICB9XHJcbiAgLmxhYmVsdHJhbWl0ZWFib3V0e1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBjb2xvcjogIzM3NzJGRiAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICB9IiwiLnRpdHVsb2NvbmRpY2lvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjMDA0ODg0O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmxleWVuZGFkb2N1bWVudG8ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMjFweDtcbiAgbWFyZ2luOiAwIDAgMTBweDtcbn1cblxuLm5vbWJyZWRvY3VtZW50byB7XG4gIGNvbG9yOiAjMEI0NTdGO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIHBhZGRpbmctdG9wOiAxcmVtO1xufVxuXG4uaW5mb2FkaWNpb25hbCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZGlzcGxheTogaW5saW5lO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcbn1cblxuLmljb25vZGlzcG9uaWJsZSB7XG4gIG1heC13aWR0aDogMjVweDtcbn1cblxuLnRpdGxlLXN1YmFjb3JkZW9uIHtcbiAgY29sb3I6ICMwQjQ1N0Y7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi5sYWJlbHRyYW1pdGVhYm91dCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGNvbG9yOiAjMzc3MkZGICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG59Il19 */\"","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FichaTramiteService } from '../../services/ficha-tramite.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PuntosAtencionComponent } from '../puntos-atencion-modal/puntos-atencion-modal.component';\r\nimport {NgbAccordionConfig} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-ficha-especifica',\r\n  templateUrl: './fichaespecifica.component.html',\r\n  styleUrls: ['./fichaespecifica.component.scss'],\r\n  providers: [NgbAccordionConfig]\r\n})\r\nexport class FichaEspecificaComponent implements OnInit {\r\n  @Input() informacionFicha: any;\r\n\r\n  @Output() propagar = new EventEmitter<object>();\r\n\r\n  infoBasicaTramite: any;\r\n  audiencias: any[];\r\n\r\n  ordenAudiencias: any[];\r\n  dataAudiencias: any[];\r\n  dataNormatividad = [];\r\n  numeroId = '';\r\n  activeIdsAcordeon = [];\r\n  dataExcepciones = [];\r\n  puntosAtencion = [];\r\n  embebidos;\r\n\r\n  constructor(\r\n    private fichaTramiteService: FichaTramiteService,\r\n    private modalService: NgbModal,\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadDataInfoFicha(this.informacionFicha);\r\n  }\r\n\r\n  private async loadDataInfoFicha(dataTramite: any) {\r\n\r\n    this.fichaTramiteService.GetTipoTramiteFichaEspecificaById(dataTramite.id).subscribe(dataFicha => {\r\n      this.infoBasicaTramite = dataFicha;\r\n      this.fichaTramiteService.GetTiposAudienciaById(dataTramite.id).subscribe(n => {\r\n        this.audiencias = n;\r\n        if ( this.audiencias.length > 0 ) {\r\n          this.loadMomentosAutiencia(dataTramite.id, this.audiencias[0].detalle);\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  cargarDetalleMomento(data) {\r\n\r\n    this.fichaTramiteService.GetDataFichaByIdAudiencia(this.informacionFicha.id, data.audiencia, data.momento)\r\n\r\n      .subscribe( (dataAccion: any) => {\r\n\r\n        dataAccion.forEach( element => {\r\n          this.audiencias.forEach( (item) => {\r\n            if (item.detalle ===  data.audiencia) {\r\n                item.momentos.forEach( (i) => {\r\n                  if (i.Orden === data.momento) {\r\n                    i.acciones = this.procesarDataAcciones(dataAccion);\r\n                  }\r\n                });\r\n            }\r\n          });\r\n        });\r\n        console.log(this.audiencias);\r\n      });\r\n\r\n  }\r\n\r\n  private procesarDataAcciones(data: any[]) {\r\n    const temporal: any[] = [];\r\n    const dataretorno: any[] = [];\r\n\r\n    data.forEach( i => {\r\n      const busqueda = temporal.find( n => n.AccionCondicionId === i.AccionCondicionId );\r\n      if (typeof(busqueda) === 'undefined') {\r\n        temporal.push(i);\r\n      }\r\n    });\r\n\r\n    temporal.forEach( n => {\r\n      if (!dataretorno[n.TipoAccionCondicion]) {\r\n        dataretorno[n.TipoAccionCondicion] = [];\r\n      }\r\n      dataretorno[n.TipoAccionCondicion].push(n);\r\n    });\r\n\r\n    return dataretorno;\r\n  }\r\n\r\n  cargarMomentosAudiencia(data) {\r\n    this.loadMomentosAutiencia( this.informacionFicha.id, data.detalle);\r\n  }\r\n\r\n  private loadMomentosAutiencia(idTramite: number, audiencias: string ) {\r\n\r\n    this.fichaTramiteService.GetMomentosByIdAudiencia(idTramite, audiencias ).subscribe( n => {\r\n      this.audiencias.forEach( (item) => {\r\n        if (item.detalle === audiencias) {\r\n          item.momentos = n;\r\n        }\r\n      });\r\n\r\n\r\n\r\n    });\r\n   }\r\n\r\n\r\n\r\n   ngOnChanges1() {\r\n    // if (this.tipoFicha === 601 &&  this.tipoFicha != undefined){\r\n    //   this.route.paramMap.subscribe(async params => {\r\n    //     this.numeroId = this.route.snapshot.params.id.substr(1,20)\r\n\r\n    //     this.dataBase = await  this.fichaTramiteService.GetInfoBasicaEspecifica(this.numeroId).toPromise();\r\n    //     let minuscula =  this.dataBase.Entidad.toLowerCase();\r\n\r\n    //     this.entidad = minuscula.replace(/^([a-z\\u00E0-\\u00FC])|\\s+([a-z\\u00E0-\\u00FC])/g, function($1){\r\n    //       return $1.toUpperCase();\r\n    //    });\r\n    //     console.log(this.dataBase , \"VERIFICAR TITULO Y LA URL DE LA ENTIDAD NO SE HA ENCONTRADO\");\r\n\r\n    //     this.audiencias = await  this.fichaTramiteService.GetTiposAudienciaById(this.numeroId).toPromise();\r\n    //     this.TitulosTipoAudiencia(this.numeroId,this.audiencias[0].tipoaudiencia);\r\n    //     console.log(\"carga inicial audiencia\",this.audiencias);\r\n\r\n    //     this.dataUrl = await  this.fichaTramiteService.GetTipoTramiteFichaEspecificaById(this.numeroId).toPromise();\r\n    //     if(this.dataUrl.Tipotramite == \"Realizar trámite en línea\" || this.dataUrl.Tipotramite ==\"SemiPresencial\"){\r\n    //       await  this.fichaTramiteService.GetEmbebidosByIdTramite(this.numeroId)\r\n    //       .toPromise()\r\n    //       .then(res => this.embebidos = res)\r\n    //       .catch(error => this.embebidos = \"Enlinea\");\r\n    //     }\r\n    //     else{\r\n    //       this.embebidos = \"Enlinea\";\r\n    //     }\r\n\r\n    //     await  this.fichaTramiteService.GetNormatividadById(this.numeroId)\r\n    //     .toPromise()\r\n    //     .then(res => this.dataNormatividad = res)\r\n    //     .catch(error => this.dataNormatividad = []);\r\n\r\n    //     await  this.fichaTramiteService.GetPuntosAtencionById(this.numeroId)\r\n    //     .toPromise()\r\n    //     .then(res => this.puntosAtencion = res)\r\n    //     .catch(error => this.puntosAtencion  = []);\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.setNumeroTramite(this.numeroId);\r\n  }\r\n  setNumeroTramite(numero: string) {\r\n    const s = document.getElementsByTagName('govco-area-servicios');\r\n    if(s.length > 0){\r\n      s[0].setAttribute('itemid', 'T' + numero);\r\n    }\r\n  }\r\n\r\n  tipoAudienciafuncion(audiencia): void {\r\n    this.ordenAudiencias = [];\r\n    this.TitulosTipoAudiencia(this.numeroId, audiencia);\r\n  }\r\n  async TitulosTipoAudiencia(numeroId, tipoAudiencia) {\r\n    this.ordenAudiencias = await  this.fichaTramiteService.GetMomentosByIdAudiencia(numeroId,tipoAudiencia).toPromise();\r\n    console.log(\"carga inicial orden audiencia\", this.ordenAudiencias);\r\n\r\n  }\r\n  dataMomentoAudiencia(tipoAudiencia, momento): void {\r\n    //this.activeIdsAcordeon.push(idacordeon);\r\n    this.ordenAudiencias.forEach(item => {\r\n     // let informacion = JSON.parse(item.Informacion);\r\n      if(item.Informacion == \"[]\" && momento == item.Orden){\r\n         this.fichaTramiteService.GetDataFichaByIdAudiencia(this.numeroId, tipoAudiencia, momento).subscribe(res =>{\r\n          this.dataAudiencias = res;\r\n          this.procesadorPrincipalData(this.dataAudiencias, momento);\r\n        });\r\n      }\r\n    });\r\n  }\r\n   async procesadorPrincipalData(data, momento) {\r\n    let CondicionNueva = '';\r\n    let OrdenAccion = 0;\r\n    let subTitulo: string;\r\n    let descripcion = [];\r\n    let dataFormularios = {};\r\n    let nuevaData = [];\r\n    let nuevaDataExcepciones = [];\r\n    let dataExepcionesProcesada = [];\r\n    let excepciones =  [];\r\n    let solicitud = true;\r\n    let ordenParcial;\r\n    this.dataExcepciones =  [];\r\n\r\n    for ( const element of data) {\r\n\r\n      descripcion = [];\r\n      subTitulo = '';\r\n      solicitud = true;\r\n      ordenParcial = 0;\r\n\r\n      if (element.OrdenAccion > OrdenAccion) {\r\n        CondicionNueva = element.CondicionNueva;\r\n        for (const item of data) {\r\n            if (item.CondicionNueva == CondicionNueva){\r\n              CondicionNueva = item.CondicionNueva;\r\n              if (item.OrdenAccion >= element.OrdenAccion){\r\n                OrdenAccion = item.OrdenAccion;\r\n\r\n                if (item.TipoAccionCondicion === 'VERIFICACION_INST' &&  item.OrdenAccion > ordenParcial ) {\r\n                  ordenParcial = item.OrdenAccion;\r\n                  const tipoDato = this.tipoCondicionAudiencia(item.TipoAccionCondicion);\r\n                  if (item.Excepcion != null) {\r\n                    const condicionExcepcion = {\r\n                      NombreExcepcion : item.Excepcion,\r\n                      Tipo : tipoDato,\r\n                      ContenidoExepcion : item.VerificacionInstDescripcion\r\n                    };\r\n                    excepciones.push(condicionExcepcion);\r\n                  } else {\r\n                    descripcion.push(item.VerificacionInstDescripcion)}\r\n                  subTitulo = tipoDato;\r\n\r\n                }\r\n                else if (item.TipoAccionCondicion === 'DOCUMENTO' &&  item.OrdenAccion > ordenParcial) {\r\n\r\n                  ordenParcial = item.OrdenAccion;\r\n                  const tipoDato = this.tipoCondicionAudiencia(item.TipoAccionCondicion);\r\n                  if(item.Excepcion != null){\r\n                    const documentoExcepcion = {\r\n                      NombreExcepcion : item.Excepcion,\r\n                      Tipo : tipoDato,\r\n                      ContenidoExepcion : this.dataDocumentos(item)\r\n                    };\r\n                    excepciones.push(documentoExcepcion);\r\n                  }\r\n                  else {\r\n                    descripcion.push(this.dataDocumentos(item))}\r\n                  subTitulo = tipoDato;\r\n\r\n                }\r\n                else if (item.TipoAccionCondicion === 'FORMULARIO' && item.OrdenAccion > ordenParcial) {\r\n                  ordenParcial = item.OrdenAccion;\r\n                  const tipoDato = this.tipoCondicionAudiencia(item.TipoAccionCondicion);\r\n                  if (item.Excepcion != null) {\r\n                    const formularioExcepcion = {\r\n                      NombreExcepcion : item.Excepcion,\r\n                      Tipo : tipoDato,\r\n                      ContenidoExepcion : this.dataFormularios(item)\r\n                    };\r\n                    excepciones.push(formularioExcepcion);\r\n                  } else {descripcion.push(this.dataFormularios(item))}\r\n                  subTitulo = tipoDato;\r\n\r\n                }\r\n              }\r\n\r\n              if (item.TipoAccionCondicion === 'SOLICITUD' && solicitud && element.OrdenAccion === OrdenAccion) {\r\n                  let dataCanales;\r\n                  const tipoDato = this.tipoCondicionAudiencia(item.TipoAccionCondicion);\r\n                  await  this.dataCanalAtencion(item).then(\r\n                    (val) => dataCanales = val )\r\n                  if (item.Excepcion != null) {\r\n                    const canalExcepcion = {\r\n                      NombreExcepcion : item.Excepcion,\r\n                      Tipo : tipoDato,\r\n                      ContenidoExepcion : dataCanales\r\n                    };\r\n                    excepciones.push(canalExcepcion);\r\n                  }else{descripcion.push(dataCanales)}\r\n                  subTitulo = tipoDato;\r\n                  solicitud = false;\r\n\r\n                }\r\n                else if(item.TipoAccionCondicion == \"PAGO\" &&  solicitud && element.OrdenAccion == OrdenAccion){\r\n                  let dataPagos;\r\n                  let tipoDato = this.tipoCondicionAudiencia(item.TipoAccionCondicion)\r\n                  await  this.dataPagos(item).then(\r\n                    (val) => dataPagos = val)\r\n                  if (item.Excepcion) {\r\n                    const pagoExcepcion = {\r\n                      NombreExcepcion : item.Excepcion,\r\n                      Tipo : tipoDato,\r\n                      ContenidoExepcion : dataPagos\r\n                    };\r\n                    excepciones.push(pagoExcepcion);\r\n                  } else {\r\n                    descripcion.push(dataPagos);\r\n                  }\r\n                  subTitulo = tipoDato;\r\n                  solicitud = false;\r\n\r\n                }\r\n            }else if (item.OrdenAccion > OrdenAccion) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n      if(descripcion.length != 0){\r\n        nuevaData.push({\r\n          'subtitulo': subTitulo,\r\n          'descripcion': descripcion,\r\n        });\r\n        descripcion = [];\r\n      }\r\n      if(excepciones.length != 0){\r\n        nuevaDataExcepciones.push(excepciones);\r\n        excepciones = [];\r\n      }\r\n    }\r\n    if(nuevaData.length > 0 || nuevaDataExcepciones.length >0){\r\n      this.unionDataNuevaYExcepciones(nuevaData,nuevaDataExcepciones,momento);\r\n    }\r\n\r\n  }\r\n  unionDataNuevaYExcepciones(nuevaData,nuevaDataExcepciones,momento):void{\r\n    let dataExepciones = [];\r\n    if(nuevaDataExcepciones.length > 0){\r\n     dataExepciones = this.procesadorDataExepciones(nuevaDataExcepciones);\r\n    }\r\n    this.ordenAudiencias.forEach(item => {\r\n      if(item.Orden == momento){\r\n        let dataSerializada = JSON.stringify(nuevaData);\r\n        item.Informacion = dataSerializada;\r\n        if(dataExepciones.length > 0){\r\n          let excepcionesSerializada = JSON.stringify(dataExepciones);\r\n          item.Excepcion = excepcionesSerializada\r\n        }\r\n      }\r\n    });\r\n  }\r\n  procesadorDataExepciones(data): Array<object>{\r\n    let NombreExcepcion;\r\n    let NombresAcordeon = [];\r\n    data.forEach(item => {\r\n      item.forEach(itemInterno => {\r\n        NombreExcepcion = itemInterno.NombreExcepcion;\r\n        if(NombresAcordeon.length > 0){\r\n          let result = NombresAcordeon.find(nombre => nombre === NombreExcepcion);\r\n          if(result == null){\r\n            NombresAcordeon.push(NombreExcepcion);\r\n          }\r\n        }\r\n        else{\r\n          NombresAcordeon.push(NombreExcepcion);\r\n        }\r\n      });\r\n    });\r\n    let dataOrganizadaExcepcion = this.ordenarDataSegunNombres(NombresAcordeon,data);\r\n    return dataOrganizadaExcepcion;\r\n  }\r\n\r\n  ordenarDataSegunNombres(nombres,data):Array<object>{\r\n    let dataOrganizadaExcepcion = [];\r\n    let contenido = [];\r\n\r\n    nombres.forEach(nombre =>{\r\n      data.forEach(dataPasos => {\r\n        dataPasos.map(function(itemData) {\r\n          if(itemData.NombreExcepcion == nombre){\r\n            if(dataOrganizadaExcepcion.length > 0){\r\n            let result =  dataOrganizadaExcepcion.map(function (itemNombre){\r\n              if(itemNombre.TituloAcordeon == itemData.NombreExcepcion){\r\n                itemNombre['Contenido'].push({\r\n                subtitulo: itemData.Tipo,\r\n                descripcion: itemData.ContenidoExepcion\r\n                });\r\n                return true;\r\n              }\r\n            })\r\n            if(result[result.length-1] == undefined){\r\n              let dataAcordeon = {\r\n                subtitulo: itemData.Tipo,\r\n                descripcion: itemData.ContenidoExepcion,\r\n              }\r\n              contenido.push(dataAcordeon);\r\n              dataOrganizadaExcepcion.push({\r\n                TituloAcordeon : itemData.NombreExcepcion,\r\n                Contenido :  contenido\r\n              });\r\n              contenido = [];\r\n            }\r\n            }else{\r\n                let dataAcordeon = {\r\n                  subtitulo: itemData.Tipo,\r\n                  descripcion: itemData.ContenidoExepcion,\r\n                }\r\n                contenido.push(dataAcordeon);\r\n                dataOrganizadaExcepcion.push({\r\n                  TituloAcordeon : itemData.NombreExcepcion,\r\n                  Contenido :  contenido\r\n                });\r\n                contenido = [];\r\n            }\r\n          }\r\n        });\r\n    });\r\n    })\r\n    return dataOrganizadaExcepcion;\r\n  };\r\n\r\n  dataPagos(item){\r\n    let descripcionPago = [];\r\n    let ordenPago = 0;\r\n    let entidadRecaudadora = [];\r\n    let promise = new Promise(async (resolve,rejected) => {\r\n    let pagos = await  this.fichaTramiteService.GetPagosByMomentoIdAudiencia(this.numeroId, item.TipoAudiencia,item.OrdenMomento).toPromise();\r\n\r\n    pagos.forEach(itemPagos => {\r\n      if(itemPagos.OrdenPago > 0 ){\r\n        if(itemPagos.OrdenPago  > ordenPago){\r\n          ordenPago = itemPagos.OrdenPago;\r\n          const descripcion = {\r\n            nombreDescripcion : itemPagos.DescripcionPago,\r\n            moneda : itemPagos.Moneda,\r\n            tipoValor : itemPagos.TipoValor,\r\n            cantidadSmlv : itemPagos.CantidadSmlv,\r\n            valor : itemPagos.Valor\r\n          }\r\n          descripcionPago.push(descripcion);\r\n        }\r\n        if(entidadRecaudadora.length > 0){\r\n          let result = entidadRecaudadora.find(entidad => (entidad.nombreEntidad === itemPagos.NombreEntidad ||\r\n                                               entidad.numeroCuenta === itemPagos.NumeroCuenta && itemPagos.NumeroCuenta != null));\r\n          if(result == null){\r\n            let banco = {\r\n              nombreEntidad : itemPagos.NombreEntidad,\r\n              tipoCuenta : itemPagos.TipoCuenta,\r\n              numeroCuenta : itemPagos.NumeroCuenta,\r\n              nombreCuenta: itemPagos.NombreCuenta,\r\n              codigoRecaudo : itemPagos.CodigoRecaudo\r\n            }\r\n            entidadRecaudadora.push(banco);\r\n          }\r\n\r\n        }else{\r\n          if(itemPagos.NumeroCuenta != null){\r\n            let banco = {\r\n              nombreEntidad : itemPagos.NombreEntidad,\r\n              tipoCuenta : itemPagos.TipoCuenta,\r\n              numeroCuenta : itemPagos.NumeroCuenta,\r\n              nombreCuenta: itemPagos.NombreCuenta,\r\n              codigoRecaudo : itemPagos.CodigoRecaudo\r\n            }\r\n            entidadRecaudadora.push(banco);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    let ObjetoPagos = {\r\n      DescripcionMomento : item.DescripcionMomento,\r\n      DescripcionPago : descripcionPago,\r\n      EntidadRecaudadora : entidadRecaudadora\r\n    }\r\n    resolve(ObjetoPagos);\r\n    });\r\n    return promise;\r\n  }\r\n  dataDocumentos(item):object{\r\n    let dataDocumentos = {\r\n      nombre : item.DocumentoNombre,\r\n      descripcion : item.DocumentoAnotacionAdicional,\r\n      cantidadDoc : item.CantidadDoc,\r\n      unidadCantidad : item.UnidadCantidad,\r\n      observacionCantidad : item.ObservacionCantidad,\r\n    }\r\n    return dataDocumentos;\r\n  }\r\n  dataFormularios(item):object{\r\n    let  dataFormularios = {\r\n      nombre : item.FormularioNombre,\r\n      descripcion : item.FormularioAnotacion,\r\n      descarga : item.FormularioUrlDescarga,\r\n      url : item.UrlResultadoWeb\r\n    }\r\n    return dataFormularios;\r\n  }\r\n    dataCanalAtencion(item){\r\n    let dataCanales;\r\n    let descripcion = [];\r\n    let canalAtencion = {};\r\n\r\n    let promise =  new Promise(async (resolve,rejected) => {\r\n      let canal = await  this.fichaTramiteService.GetCanalesByMomentoIdAudiencia(this.numeroId, item.TipoAudiencia,item.OrdenMomento).toPromise();\r\n      let puntosAtencion = this.puntosAtencion;\r\n      canal.forEach(itemCanal => {\r\n        canalAtencion = {\r\n          canal : itemCanal\r\n        };\r\n        if(itemCanal.TipoCanal == \"PRESENCIAL\"){\r\n          canalAtencion = {\r\n            canal : itemCanal,\r\n            puntosAtencion :  puntosAtencion\r\n          };\r\n        }\r\n        descripcion.push(\r\n          dataCanales = {\r\n            descripcion : item.AtencionDescripcion,\r\n            canal : canalAtencion,\r\n          }\r\n        );\r\n        canalAtencion = {};\r\n      });\r\n    resolve(descripcion);\r\n    });\r\n    return promise;\r\n  }\r\n  tipoCondicionAudiencia(data):string{\r\n    let tipoCondicion;\r\n\r\n      switch (data) {\r\n        case \"VERIFICACION_INST\":\r\n          tipoCondicion =\"Condiciones\";\r\n            break;\r\n        case \"PAGO\":\r\n          tipoCondicion =\"Pago\";\r\n            break;\r\n        case \"SOLICITUD\":\r\n          tipoCondicion =\"Canal de atención\";\r\n            break;\r\n        case \"DOCUMENTO\":\r\n          tipoCondicion =\"Documento\";\r\n            break;\r\n        case \"FORMULARIO\":\r\n          tipoCondicion =\"Formulario\";\r\n            break;\r\n        case \"EXCEPCION\":\r\n          tipoCondicion =\"Excepción\";\r\n            break;\r\n        default:\r\n          tipoCondicion = data;\r\n            break;\r\n    }\r\n    return tipoCondicion;\r\n  }\r\n  extractFromJson(obj){\r\n    obj = JSON.parse(obj);\r\n    return obj;\r\n  }\r\n  showModal(data) {\r\n   const modal = this.modalService.open(PuntosAtencionComponent, { size: 'lg',\r\n      backdrop: \"static\",\r\n      keyboard: false\r\n    });\r\n    if(data.tipo == \"puntos\"){\r\n    modal.componentInstance.puntosAtencion = data.data;\r\n    }\r\n    if(data.tipo == \"normatividad\"){\r\n      modal.componentInstance.normatividad = data.data;\r\n    }\r\n  }\r\n  redireccionar(){\r\n    this.propagar.emit({ id : this.numeroId , tipo : 'Embebido', data : this.embebidos });\r\n  }\r\n\r\n\r\n}\r\n\r\n","module.exports = \"a {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvZmljaGFlc3RhbmRhci9DOlxcQ29udHJhdG8tNDQ4LTIwMjBcXFByb2R1Y2Npb25cXHRyYW1pdGVzLXNlcnZpY2lvcy1zcGEtc2NkXFxzcmMvc3JjXFxhcHBcXHRyYW1pdGVzXFxmaWNoYXRyYW1pdGVcXGNvbXBvbmVudHNcXGZpY2hhZXN0YW5kYXJcXGZpY2hhZXN0YW5kYXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2ZpY2hhZXN0YW5kYXIvZmljaGFlc3RhbmRhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFHLFlBQUE7QUNFSCIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2ZpY2hhZXN0YW5kYXIvZmljaGFlc3RhbmRhci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImF7IGNvbG9yOndoaXRlO30iLCJhIHtcbiAgY29sb3I6IHdoaXRlO1xufSJdfQ== */\"","import { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FichaTramiteService } from '../../services/ficha-tramite.service'\r\n\r\n\r\n@Component({\r\n  selector: 'ficha-estandar',\r\n  templateUrl: './fichaestandar.component.html',\r\n  styleUrls: ['./fichaestandar.component.scss']\r\n})\r\nexport class FichaEstandarComponent implements OnChanges {\r\n  @Input('tipoFicha') tipoFicha: number;\r\n  @Output() propagar = new EventEmitter<object>();\r\n\r\n  numeroId;\r\n  dataBase: any;\r\n  constructor(private route: ActivatedRoute, private fichaTramiteService:FichaTramiteService,private router: Router  ) {\r\n\r\n  }\r\n  ngOnChanges() {\r\n    if(this.tipoFicha == 602 &&  this.tipoFicha != undefined){\r\n      this.route.paramMap.subscribe(params => {\r\n        this.numeroId = this.route.snapshot.params.id.substr(1,20)\r\n        this.fichaTramiteService.GetInfoFichaEstandarById(this.numeroId).subscribe(res =>{\r\n          this.dataBase = res;\r\n\r\n        });\r\n      });\r\n      this.tipoFicha = 0;\r\n    }\r\n  }\r\n  idMunicipio(id) {\r\n    this.propagar.emit({ id : id});\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \".tramiteCard {\\n  border-radius: 0.5rem;\\n  padding: 20px;\\n  margin: 20px 0px 0px 0px !important;\\n  background: #fff;\\n  width: 100%;\\n  border: 1px;\\n  border-color: #E5EEFB;\\n  border-style: solid;\\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  clear: both;\\n  overflow: hidden;\\n}\\n\\n.titulotramite {\\n  font-size: 33px;\\n  text-align: left;\\n  color: #0B457F;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvZmljaGFub3N1aXRlL0M6XFxDb250cmF0by00NDgtMjAyMFxcUHJvZHVjY2lvblxcdHJhbWl0ZXMtc2VydmljaW9zLXNwYS1zY2RcXHNyYy9zcmNcXGFwcFxcdHJhbWl0ZXNcXGZpY2hhdHJhbWl0ZVxcY29tcG9uZW50c1xcZmljaGFub3N1aXRlXFxmaWNoYW5vc3VpdGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2ZpY2hhbm9zdWl0ZS9maWNoYW5vc3VpdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxxQkFBQTtFQUNBLGFBQUE7RUFDQSxtQ0FBQTtFQUNBLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EsK0dBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7QUNDSjs7QURDQTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2ZpY2hhbm9zdWl0ZS9maWNoYW5vc3VpdGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudHJhbWl0ZUNhcmR7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjVyZW07XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWFyZ2luOiAyMHB4IDBweCAwcHggMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXI6IDFweDtcclxuICAgIGJvcmRlci1jb2xvcjogI0U1RUVGQjtcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcbiAgICBjbGVhcjogYm90aDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfVxyXG4udGl0dWxvdHJhbWl0ZXtcclxuICAgIGZvbnQtc2l6ZTogMzNweDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBjb2xvcjogIzBCNDU3RjtcclxufSIsIi50cmFtaXRlQ2FyZCB7XG4gIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luOiAyMHB4IDBweCAwcHggMHB4ICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXI6IDFweDtcbiAgYm9yZGVyLWNvbG9yOiAjRTVFRUZCO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gIGNsZWFyOiBib3RoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4udGl0dWxvdHJhbWl0ZSB7XG4gIGZvbnQtc2l6ZTogMzNweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY29sb3I6ICMwQjQ1N0Y7XG59Il19 */\"","import { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FichaTramiteService } from '../../services/ficha-tramite.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PuntosAtencionComponent } from '../puntos-atencion-modal/puntos-atencion-modal.component';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'ficha-no-suite',\r\n  templateUrl: './fichanosuite.component.html',\r\n  styleUrls: ['./fichanosuite.component.scss']\r\n})\r\nexport class FichaNoSuiteComponent implements OnChanges {\r\n  @Input('tipoFicha') tipoFicha: string;\r\n  dataBase: any;\r\n  consideraciones = [];\r\n  puntosAtencion = [];\r\n  numeroId;\r\n\r\n  constructor(private route: ActivatedRoute, private fichaTramiteService:FichaTramiteService,private router: Router, private modalService: NgbModal  ) {\r\n\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if(this.tipoFicha == \"603\" &&  this.tipoFicha != undefined){\r\n      this.route.paramMap.subscribe(params => {\r\n        this.numeroId = this.route.snapshot.params.id.substr(1,20);\r\n        this.fichaTramiteService.GetNotSuiteTramiteById(this.route.snapshot.params.id).subscribe(data =>{\r\n          this.dataBase = data;\r\n        })\r\n        this.fichaTramiteService.GetConsideracionesAdicionalesById(this.route.snapshot.params.id).subscribe(data =>{\r\n          this.consideraciones = data;\r\n        })\r\n        this.fichaTramiteService.GetPuntosAtencionNoSuitById(this.route.snapshot.params.id).subscribe(data =>{\r\n         this.getDatosPuntosAtencion(data);\r\n        })\r\n      })\r\n    }\r\n  }\r\n  async getDatosPuntosAtencion(data){\r\n    for(const item of data) {\r\n      let punto = await  this.fichaTramiteService.GetPuntosAtencionById(item.PuntosAtencionId).toPromise();\r\n      this.puntosAtencion.push(punto[0]);\r\n    }\r\n  }\r\n\r\n  showModal(data) {\r\n   const modal = this.modalService.open(PuntosAtencionComponent, { size: 'lg',\r\n      backdrop: \"static\",\r\n      keyboard: false\r\n    });\r\n    modal.componentInstance.puntosAtencion = data;\r\n  }\r\n\r\n  ngAfterViewChecked(){\r\n    this.setNumeroTramite(this.numeroId);\r\n  }\r\n  setNumeroTramite(numero: string) {\r\n    const s = document.getElementsByTagName('govco-area-servicios');\r\n    if(s.length > 0){\r\n      s[0].setAttribute('itemid', \"S\"+numero);\r\n    }\r\n  }\r\n}\r\n\r\n","module.exports = \".govco-card-red {\\n  padding: 1rem !important;\\n  text-align: justify;\\n  border-color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvZ2VuZXJhbC9DOlxcQ29udHJhdG8tNDQ4LTIwMjBcXFByb2R1Y2Npb25cXHRyYW1pdGVzLXNlcnZpY2lvcy1zcGEtc2NkXFxzcmMvc3JjXFxhcHBcXHRyYW1pdGVzXFxmaWNoYXRyYW1pdGVcXGNvbXBvbmVudHNcXGdlbmVyYWxcXGdlbmVyYWwuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL2dlbmVyYWwvZ2VuZXJhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvZ2VuZXJhbC9nZW5lcmFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdvdmNvLWNhcmQtcmVkIHtcclxuICAgIHBhZGRpbmc6IDFyZW0haW1wb3J0YW50O1xyXG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcclxuICAgIGJvcmRlci1jb2xvcjogcmVkO1xyXG59IiwiLmdvdmNvLWNhcmQtcmVkIHtcbiAgcGFkZGluZzogMXJlbSAhaW1wb3J0YW50O1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICBib3JkZXItY29sb3I6IHJlZDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FichaTramiteService } from '../../services/ficha-tramite.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-general',\r\n  templateUrl: './general.component.html',\r\n  styleUrls: ['./general.component.scss']\r\n})\r\nexport class GeneralComponent implements OnInit {\r\n\r\n  tramite: any = {\r\n    id: '',\r\n    tipo: null,\r\n    prefijo: ''\r\n  };\r\n\r\n  cosa: any;\r\n\r\n  estadoHeader: any;\r\n\r\n  dataEmbebidos;\r\n  datosTipoFicha: string;\r\n  embebido = false;\r\n\r\n\r\n  constructor(\r\n    public fichaTramiteService: FichaTramiteService,\r\n    private activatedRoute: ActivatedRoute,\r\n    ) { }\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    const parametroid = this.activatedRoute.snapshot.params.id;\r\n    let idTramiteTemp = parametroid;\r\n\r\n    if ( parametroid !== 'embebido' ) {\r\n      this.tramite.id = parametroid.substring(1);\r\n      this.tramite.prefijo = parametroid.substring(0, 1).toLowerCase();\r\n\r\n      // Tramite suit\r\n      if (this.tramite.prefijo === 't') {\r\n        idTramiteTemp = this.tramite.id;\r\n      }\r\n\r\n      this.fichaTramiteService.GetTipoFichaTramite(idTramiteTemp)\r\n        .subscribe( data => {\r\n          this.tramite.tipo = data.StatusCode;\r\n        });\r\n\r\n    } else {\r\n      this.embebido = true;\r\n    }\r\n  }\r\n\r\n\r\n  redireccionador(evento) {\r\n    // if(evento.tipo == \"Embebido\"){\r\n    //   this.dataEmbebidos = evento.data;\r\n    //   this.router.navigate(['ficha-tramite/T'+evento.id+'/embebido']);\r\n    //   // let url = this.router.createUrlTree(['ficha-tramite/T'+evento.id+'/embebido'])\r\n    //   // window.open(url.toString(), '_blank')\r\n    //   this.embebido = true;\r\n\r\n    // }else{\r\n    //   this.router.navigate(['ficha-tramite/T'+evento.id+''])\r\n    //   this.datosTipoFicha = \"601\";\r\n    // }\r\n  }\r\n\r\n\r\n}\r\n\r\n","module.exports = \".titulo_popuptramite {\\n  color: #0B457F !important;\\n  font-weight: bold;\\n  font-size: 20px;\\n}\\n\\n.hr-popuptramites {\\n  left: 0px;\\n  top: 11%;\\n  right: 0px;\\n  height: 8%;\\n  width: 100%;\\n  color: #0B457F;\\n  text-align: center;\\n  border-top: 2px !important;\\n  border-top-style: solid !important;\\n  border-top-color: #0061EA !important;\\n  background-color: #E5EEFB;\\n  display: block;\\n  position: relative;\\n}\\n\\n.iconodisponible {\\n  max-width: 25px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvcHVudG9zLWF0ZW5jaW9uLW1vZGFsL0M6XFxDb250cmF0by00NDgtMjAyMFxcUHJvZHVjY2lvblxcdHJhbWl0ZXMtc2VydmljaW9zLXNwYS1zY2RcXHNyYy9zcmNcXGFwcFxcdHJhbWl0ZXNcXGZpY2hhdHJhbWl0ZVxcY29tcG9uZW50c1xccHVudG9zLWF0ZW5jaW9uLW1vZGFsXFxwdW50b3MtYXRlbmNpb24tbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL3B1bnRvcy1hdGVuY2lvbi1tb2RhbC9wdW50b3MtYXRlbmNpb24tbW9kYWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtBQ0NKOztBRENBO0VBQ0ksU0FBQTtFQUNBLFFBQUE7RUFDQSxVQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSwwQkFBQTtFQUNBLGtDQUFBO0VBQ0Esb0NBQUE7RUFDQSx5QkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQ0VKOztBREFBO0VBQ0ksZUFBQTtBQ0dKIiwiZmlsZSI6InNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvcHVudG9zLWF0ZW5jaW9uLW1vZGFsL3B1bnRvcy1hdGVuY2lvbi1tb2RhbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXR1bG9fcG9wdXB0cmFtaXRle1xyXG4gICAgY29sb3I6ICMwQjQ1N0YgIWltcG9ydGFudDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcbi5oci1wb3B1cHRyYW1pdGVze1xyXG4gICAgbGVmdDogMHB4O1xyXG4gICAgdG9wOiAxMSU7XHJcbiAgICByaWdodDogMHB4O1xyXG4gICAgaGVpZ2h0OiA4JTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgY29sb3I6ICMwQjQ1N0Y7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3JkZXItdG9wOiAycHggIWltcG9ydGFudDtcclxuICAgIGJvcmRlci10b3Atc3R5bGU6IHNvbGlkICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXItdG9wLWNvbG9yOiAjMDA2MUVBICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTVFRUZCO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuLmljb25vZGlzcG9uaWJsZXtcclxuICAgIG1heC13aWR0aDogMjVweDtcclxufSIsIi50aXR1bG9fcG9wdXB0cmFtaXRlIHtcbiAgY29sb3I6ICMwQjQ1N0YgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmhyLXBvcHVwdHJhbWl0ZXMge1xuICBsZWZ0OiAwcHg7XG4gIHRvcDogMTElO1xuICByaWdodDogMHB4O1xuICBoZWlnaHQ6IDglO1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6ICMwQjQ1N0Y7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXRvcDogMnB4ICFpbXBvcnRhbnQ7XG4gIGJvcmRlci10b3Atc3R5bGU6IHNvbGlkICFpbXBvcnRhbnQ7XG4gIGJvcmRlci10b3AtY29sb3I6ICMwMDYxRUEgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0U1RUVGQjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmljb25vZGlzcG9uaWJsZSB7XG4gIG1heC13aWR0aDogMjVweDtcbn0iXX0= */\"","import { Component, OnInit,Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\n@Component({\r\n  selector: 'app-puntos-atencion-modal',\r\n  templateUrl: './puntos-atencion-modal.component.html',\r\n  styleUrls: ['./puntos-atencion-modal.component.scss']\r\n})\r\nexport class PuntosAtencionComponent implements OnInit {\r\n\r\n  @Input() puntosAtencion:string;\r\n  @Input() normatividad:string;\r\n  p: number = 1;\r\n\r\n  constructor(private activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  closeModal(){\r\n    this.activeModal.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"a {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvcmVjdXJzb3MtbW9kYWwvQzpcXENvbnRyYXRvLTQ0OC0yMDIwXFxQcm9kdWNjaW9uXFx0cmFtaXRlcy1zZXJ2aWNpb3Mtc3BhLXNjZFxcc3JjL3NyY1xcYXBwXFx0cmFtaXRlc1xcZmljaGF0cmFtaXRlXFxjb21wb25lbnRzXFxyZWN1cnNvcy1tb2RhbFxccmVjdXJzb3MtbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RyYW1pdGVzL2ZpY2hhdHJhbWl0ZS9jb21wb25lbnRzL3JlY3Vyc29zLW1vZGFsL3JlY3Vyc29zLW1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQUksWUFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvdHJhbWl0ZXMvZmljaGF0cmFtaXRlL2NvbXBvbmVudHMvcmVjdXJzb3MtbW9kYWwvcmVjdXJzb3MtbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhIHsgY29sb3I6IHdoaXRlO30iLCJhIHtcbiAgY29sb3I6IHdoaXRlO1xufSJdfQ== */\"","import { Component, OnInit,Input, OnChanges, AfterViewChecked } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-recursos-modal',\r\n  templateUrl: './recursos-modal.component.html',\r\n  styleUrls: ['./recursos-modal.component.scss']\r\n})\r\nexport class RecursosModalComponent implements AfterViewChecked {\r\n\r\n  @Input() idTramite:string;\r\n\r\n  constructor(private activeModal: NgbActiveModal) { }\r\n\r\n\r\n  ngAfterViewChecked(){\r\n    this.setNumeroTramite(this.idTramite);\r\n  }\r\n  setNumeroTramite(numero: string) {\r\n    const s = document.getElementsByTagName('govco-area-servicios');\r\n    if(s.length > 0){\r\n      s[0].setAttribute('module-id', numero);\r\n    }\r\n  }\r\n\r\n\r\n  closeModal(){\r\n    this.activeModal.close();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GeneralComponent } from './components/general/general.component';\r\nimport { EmbebidosComponent } from './components/embebidos/embebidos.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: GeneralComponent,\r\n    children: [\r\n      {\r\n        path: \"embebido\",\r\n        component: EmbebidosComponent,\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class FichaTramiteRoutingModule { }\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FichaTramiteRoutingModule } from './ficha-tramite-routing.module';\r\nimport { GeneralComponent } from './components/general/general.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FichaTramiteService } from './services/ficha-tramite.service';\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport { FichaEstandarComponent } from './components/fichaestandar/fichaestandar.component';\r\nimport { FichaEspecificaComponent } from './components/fichaespecifica/fichaespecifica.component';\r\nimport { FichaNoSuiteComponent } from './components/fichanosuite/fichanosuite.component';\r\nimport { EmbebidosComponent } from './components/embebidos/embebidos.component';\r\nimport { PuntosAtencionComponent } from './components/puntos-atencion-modal/puntos-atencion-modal.component';\r\nimport { RecursosModalComponent } from './components/recursos-modal/recursos-modal.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FichaespecificaHeaderComponent } from './components/fichaespecifica-header/fichaespecifica-header.component';\r\nimport { FichaespecificaAccordionComponent } from './components/fichaespecifica-accordion/fichaespecifica-accordion.component';\r\nimport { AccionVerificacionComponent } from './components/acciones/accion-verificacion/accion-verificacion.component';\r\nimport { AccionPagoComponent } from './components/acciones/accion-pago/accion-pago.component';\r\nimport { AccionSolicitudComponent } from './components/acciones/accion-solicitud/accion-solicitud.component';\r\nimport { AccionDocumentoComponent } from './components/acciones/accion-documento/accion-documento.component';\r\nimport { AccionFormularioComponent } from './components/acciones/accion-formulario/accion-formulario.component';\r\nimport { AccionExcepcionComponent } from './components/acciones/accion-excepcion/accion-excepcion.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GeneralComponent,\r\n    children: []\r\n  }\r\n];\r\n@NgModule({\r\n  declarations: [ GeneralComponent,\r\n                  FichaEstandarComponent,\r\n                  FichaEspecificaComponent,\r\n                  PuntosAtencionComponent,\r\n                  RecursosModalComponent,\r\n                  EmbebidosComponent,\r\n                  FichaNoSuiteComponent,\r\n                  FichaespecificaHeaderComponent,\r\n                  FichaespecificaAccordionComponent,\r\n                  AccionVerificacionComponent,\r\n                  AccionPagoComponent,\r\n                  AccionSolicitudComponent,\r\n                  AccionDocumentoComponent,\r\n                  AccionFormularioComponent,\r\n                  AccionExcepcionComponent],\r\n  imports: [\r\n    NgbModule,\r\n    FichaTramiteRoutingModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    Ng2SearchPipeModule,\r\n    FormsModule,\r\n    NgxPaginationModule\r\n  ],\r\n  entryComponents: [\r\n    PuntosAtencionComponent,\r\n    RecursosModalComponent\r\n  ],\r\n  providers: [FichaTramiteService],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class FichaTramiteModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TipoFichaTramite, DatosBaseFichaTramite, TipoEnlace,\r\n         TipoAudiencia, MomentosAudienciaTitulo, DataMomentosAudiencia,\r\n         CanalesAtencion, PuntosAtencion, InformacionPago, Normatividad,\r\n         PuntosFichaTramiteEstandar, Embebidos, TramiteNoSuite, Condiciones,\r\n         PuntosAtencionNoSuite } from '../models/tipo-ficha-tramite';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst API_URL = environment.serverUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FichaTramiteService {\r\n\r\nconstructor(private http: HttpClient) {\r\n }\r\n\r\n  private getGeneric<T>(endPoint: string, parameters: string = '') {\r\n    return this.http.get<T>(`${API_URL}${endPoint}${parameters}`);\r\n  }\r\n\r\n  GetTipoFichaTramite(idTramite) {\r\n    return this.getGeneric<TipoFichaTramite>('FichaTramite/GetTipoFichaTramiteById/', idTramite );\r\n  }\r\n  GetInfoBasicaEspecifica(idTramite) {\r\n    return this.getGeneric<DatosBaseFichaTramite>('FichaTramite/GetInfoBasicaEspecificaById/', idTramite)\r\n    .pipe(\r\n      map( (n: DatosBaseFichaTramite) => {\r\n        n.Entidad = n.Entidad.toLowerCase();\r\n        return n;\r\n      })\r\n    );\r\n  }\r\n  GetTipoTramiteFichaEspecificaById(idTramite) {\r\n    return this.getGeneric<TipoEnlace>('FichaTramite/GetTipoTramiteFichaEspecificaById/', idTramite);\r\n  }\r\n  GetTiposAudienciaById(idTramite) {\r\n    return this.getGeneric<TipoAudiencia[]>('FichaTramite/GetTiposAudienciaById/', idTramite);\r\n  }\r\n  GetMomentosByIdAudiencia(idTramite, audiencia) {\r\n    return this.getGeneric<MomentosAudienciaTitulo[]>('FichaTramite/GetMomentosByIdAudiencia/' , `${idTramite}/${audiencia}`);\r\n  }\r\n  GetDataFichaByIdAudiencia(idTramite, audiencia, momento) {\r\n    return this.getGeneric<DataMomentosAudiencia[]>('FichaTramite/GetDataFichaByIdAudiencia/', `${idTramite}/${audiencia}/${momento}`);\r\n  }\r\n  GetCanalesByMomentoIdAudiencia(idTramite, audiencia, momento) {\r\n    return this.getGeneric<CanalesAtencion[]>('FichaTramite/GetCanalesByMomentoIdAudiencia/', `${idTramite}/${audiencia}/${momento}`);\r\n  }\r\n  GetPuntosAtencionById(idTramite) {\r\n    return this.getGeneric<PuntosAtencion[]>('FichaTramite/GetPuntosAtencionById/', idTramite);\r\n  }\r\n  GetPagosByMomentoIdAudiencia(idTramite, audiencia, momento) {\r\n    return this.getGeneric<InformacionPago[]>('FichaTramite/GetPagosByMomentoIdAudiencia/', `${idTramite}/${audiencia}/${momento}`);\r\n  }\r\n  GetNormatividadById(idTramite) {\r\n    return this.getGeneric<Normatividad[]>('FichaTramite/GetNormatividadById/', idTramite);\r\n  }\r\n  GetInfoFichaEstandarById(idTramite) {\r\n    return this.getGeneric<PuntosFichaTramiteEstandar>('FichaTramite/GetInfoFichaEstandarById/', idTramite);\r\n  }\r\n  GetEmbebidosByIdTramite(idTramite) {\r\n    return this.getGeneric<Embebidos>('TramitesEmbebidos/GetEmbebidosByIdTramite/', idTramite);\r\n  }\r\n  GetNotSuiteTramiteById(idTramite) {\r\n    return this.getGeneric<TramiteNoSuite>('FichaNoSuitTramite/GetNotSuiteTramiteById/', idTramite);\r\n  }\r\n  GetConsideracionesAdicionalesById(idTramite) {\r\n    return this.getGeneric<Condiciones[]>('FichaNoSuitTramite/GetConsideracionesAdicionalesById/', idTramite);\r\n  }\r\n  GetPuntosAtencionNoSuitById(idTramite) {\r\n    return this.getGeneric<PuntosAtencionNoSuite[]>('FichaNoSuitTramite/GetPuntosAtencionNoSuitById/', idTramite);\r\n  }\r\n}\r\n"],"sourceRoot":""}